import discord
from discord.ext import commands
from discord.ui import Button, View, Modal, TextInput, Select
from discord import app_commands
import datetime
import json
import os
import re
import sys
import importlib
from pathlib import Path
import traceback
from typing import Optional
import gspread
from oauth2client.service_account import ServiceAccountCredentials





# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
BOT_ADMIN_ID = 297265099444322315
MIN_RANK_FOR_HR = "–ö–∞–ø–∏—Ç–∞–Ω –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π —Å–ª—É–∂–±—ã"
REQUESTS_CHANNEL = 1401272012185276599
DISMISSAL_CHANNEL = 1401272012185276599  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ç–æ—Ç –∂–µ –∫–∞–Ω–∞–ª
LOG_CHANNEL = 1401276964366712912
REQUEST_STATUS_CHANNEL = REQUESTS_CHANNEL

RANK_HIERARCHY = [
    "–†—è–¥–æ–≤–æ–π –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π —Å–ª—É–∂–±—ã",
    "–ú–ª–∞–¥—à–∏–π —Å–µ—Ä–∂–∞–Ω—Ç –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π —Å–ª—É–∂–±—ã",
    "–°–µ—Ä–∂–∞–Ω—Ç –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π —Å–ª—É–∂–±—ã",
    "–°—Ç–∞—Ä—à–∏–π —Å–µ—Ä–∂–∞–Ω—Ç –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π —Å–ª—É–∂–±—ã",
    "–°—Ç–∞—Ä—à–∏–Ω–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π —Å–ª—É–∂–±—ã",
    "–ü—Ä–∞–ø–æ—Ä—â–∏–∫ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π —Å–ª—É–∂–±—ã",
    "–°—Ç–∞—Ä—à–∏–π –ü—Ä–∞–ø–æ—Ä—â–∏–∫ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π —Å–ª—É–∂–±—ã",
    "–ú–ª–∞–¥—à–∏–π –õ–µ–π—Ç–µ–Ω–∞–Ω—Ç –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π —Å–ª—É–∂–±—ã",
    "–õ–µ–π—Ç–µ–Ω–∞–Ω—Ç –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π —Å–ª—É–∂–±—ã",
    "–°—Ç–∞—Ä—à–∏–π –õ–µ–π—Ç–µ–Ω–∞–Ω—Ç –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π —Å–ª—É–∂–±—ã",
    "–ö–∞–ø–∏—Ç–∞–Ω –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π —Å–ª—É–∂–±—ã",
    "–ú–∞–π–æ—Ä –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π —Å–ª—É–∂–±—ã",
    "–ü–æ–¥–ø–æ–ª–∫–æ–≤–Ω–∏–∫ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π —Å–ª—É–∂–±—ã",
    "–ü–æ–ª–∫–æ–≤–Ω–∏–∫ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π —Å–ª—É–∂–±—ã",
    "–ì–µ–Ω–µ—Ä–∞–ª-–ú–∞–π–æ—Ä –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π —Å–ª—É–∂–±—ã"
]

POSITIONS = [
    "–ë–µ–∑ –¥–æ–ª–∂–Ω–æ—Å—Ç–∏",
    "–ö–æ–º–∞–Ω–¥–∏—Ä –æ—Ç–¥–µ–ª–µ–Ω–∏—è",
    "–ó–∞–º. –∫–æ–º–∞–Ω–¥–∏—Ä–∞ –æ—Ç–¥–µ–ª–µ–Ω–∏—è"
]

DIVISIONS = ["–ê–∫–∞–¥–µ–º–∏—è –§–°–ò–ù", "–û–°–ë", "–û–û–∏–ù", "–û–ö", "–°–ß", "–û–°–ù"]

DATA_FILE = "personnel_data.json"
SETTINGS_FILE = "bot_settings.json"
GOOGLE_CREDS_FILE = "google_credentials.json"

intents = discord.Intents.default()
intents.messages = True
intents.message_content = True
intents.members = True

bot = commands.Bot(command_prefix='!', intents=intents)

class RequestData:
    def __init__(self):
        self.recruitment_requests = {}
        self.dismissal_requests = {}

request_data = RequestData()


from aiohttp import web
import threading
import asyncio

class BotWebServer:
    def __init__(self, bot, host='0.0.0.0', port=5000):
        self.bot = bot
        self.host = host
        self.port = port
        self.app = web.Application()
        self.runner = None
        self.site = None
        self.setup_routes()
        
    def setup_routes(self):
        self.app.router.add_post('/google-sheets-audit', self.handle_google_sheets_audit)
        self.app.router.add_get('/health', self.health_check)
        self.app.router.add_get('/', self.root_handler)
    
    async def handle_google_sheets_audit(self, request):
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
            auth_token = request.headers.get('Authorization')
            if not self.validate_token(auth_token):
                return web.json_response({"status": "error", "message": "Unauthorized"}, status=401)
            
            data = await request.json()
            
            if data.get('action') == 'google_sheets_audit':
                audit_data = data['data']
                
                # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∞—É–¥–∏—Ç –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –ø–æ—Ç–æ–∫–µ –±–æ—Ç–∞
                success = await self.process_audit(audit_data)
                
                if success:
                    return web.json_response({
                        "status": "success", 
                        "message": "–ê—É–¥–∏—Ç —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ Discord"
                    })
                else:
                    return web.json_response({
                        "status": "error", 
                        "message": "–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∞—É–¥–∏—Ç–∞"
                    }, status=500)
            else:
                return web.json_response({
                    "status": "error", 
                    "message": "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∑–∞–ø—Ä–æ—Å–∞"
                }, status=400)
                
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∞—É–¥–∏—Ç–∞: {e}")
            return web.json_response({
                "status": "error", 
                "message": str(e)
            }, status=500)
    
    def validate_token(self, token):
        """–ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞"""
        expected_token = "Bearer your-secret-token-here"
        return token == expected_token
    
    async def health_check(self, request):
        return web.json_response({
            "status": "online", 
            "bot": str(self.bot.user),
            "guilds": len(self.bot.guilds)
        })
    
    async def root_handler(self, request):
        return web.json_response({
            "message": "UVDBot Web Server",
            "endpoints": {
                "POST /google-sheets-audit": "–ü—Ä–∏–µ–º –∞—É–¥–∏—Ç–æ–≤ –∏–∑ Google –¢–∞–±–ª–∏—Ü",
                "GET /health": "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –±–æ—Ç–∞",
                "GET /": "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–µ—Ä–µ"
            }
        })
    
    async def process_audit(self, audit_data):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—É–¥–∏—Ç–∞ –∏–∑ Google –¢–∞–±–ª–∏—Ü"""
        try:
            # –°–æ–∑–¥–∞–µ–º embed —Ç–∞–∫–æ–π –∂–µ –∫–∞–∫ —É –±–æ—Ç–∞
            action_colors = {
                "–ü—Ä–∏–Ω—è—Ç": 0x00FF00,    # –ó–µ–ª–µ–Ω—ã–π
                "–£–≤–æ–ª–µ–Ω": 0xFF0000,    # –ö—Ä–∞—Å–Ω—ã–π
                "–ü–æ–≤—ã—à–µ–Ω": 0xFFA500,   # –û—Ä–∞–Ω–∂–µ–≤—ã–π
                "–ü–æ–Ω–∏–∂–µ–Ω": 0xFFFF00,   # –ñ–µ–ª—Ç—ã–π
                "–ü–µ—Ä–µ–≤–µ–¥–µ–Ω": 0xFFFF00  # –ñ–µ–ª—Ç—ã–π
            }
            
            color = action_colors.get(audit_data['action'], 0x2E73F0)
            
            embed = discord.Embed(
                title="üìù –ö–∞–¥—Ä–æ–≤—ã–π –∞—É–¥–∏—Ç –§–°–ò–ù",
                color=color,
                timestamp=datetime.datetime.now()
            )
            
            embed.set_thumbnail(url="https://media.discordapp.net/attachments/1407347004400472176/1419651513311170641/Gerb_FSIN.png?ex=68d28900&is=68d13780&hm=14dd51a0315adcf62c7c9c52d04d5d220340ee9ab037dfc55678ecfc4791b9b5&=&format=webp&quality=lossless&width=911&height=960")
            
            # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—è
            target_mention = f"<@{audit_data['discord_id']}>" if audit_data['discord_id'] else audit_data['full_name']
            
            embed.add_field(
                name="–ö–∞–¥—Ä–æ–≤—É—é –æ—Ç–ø–∏—Å–∞–ª", 
                value="Google –¢–∞–±–ª–∏—Ü–∞",
                inline=False
            )
            
            embed.add_field(
                name="–ò–º—è –§–∞–º–∏–ª–∏—è | 6 —Ü–∏—Ñ—Ä —Å—Ç–∞—Ç–∏–∫–∞", 
                value=f"{audit_data['full_name']} | {audit_data['static']}", 
                inline=False
            )

            embed.add_field(name="–î–∞—Ç–∞ –î–µ–π—Å—Ç–≤–∏—è", value=datetime.datetime.now().strftime("%d-%m-%Y"), inline=False)
            embed.add_field(name="–î–µ–π—Å—Ç–≤–∏–µ", value=audit_data['action'], inline=False)
            
            if audit_data['discord_id']:
                embed.add_field(name="–°–æ—Ç—Ä—É–¥–Ω–∏–∫", value=target_mention, inline=False)
            
            embed.add_field(name="–ó–≤–∞–Ω–∏–µ", value=audit_data['rank'], inline=True)
            embed.add_field(name="–ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ", value=audit_data['division'], inline=True)
            embed.add_field(name="–ò—Å—Ç–æ—á–Ω–∏–∫", value="Google –¢–∞–±–ª–∏—Ü–∞", inline=True)

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –∫–∞–Ω–∞–ª –∞—É–¥–∏—Ç–∞
            settings = load_settings()
            audit_channel_id = settings["channels"].get("logs", LOG_CHANNEL)
            channel = self.bot.get_channel(audit_channel_id)
            
            if channel:
                await channel.send(embed=embed)
                
                # –û–±–Ω–æ–≤–ª—è–µ–º –ª–∏—Å—Ç –∫–∞–¥—Ä–æ–≤–æ–≥–æ –∞—É–¥–∏—Ç–∞
                await self.update_audit_sheet(audit_data)
                
                # –û–±–Ω–æ–≤–ª—è–µ–º –ª–∏—á–Ω—ã–π —Å–æ—Å—Ç–∞–≤ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
                if audit_data['action'] in ['–ü—Ä–∏–Ω—è—Ç', '–£–≤–æ–ª–µ–Ω']:
                    await self.update_personnel_sheet(audit_data)
                
                return True
            else:
                print("–ö–∞–Ω–∞–ª –¥–ª—è –∞—É–¥–∏—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return False
                
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∞—É–¥–∏—Ç–∞: {e}")
            return False
    
    async def update_audit_sheet(self, audit_data):
        """–û–±–Ω–æ–≤–∏—Ç—å –ª–∏—Å—Ç –∫–∞–¥—Ä–æ–≤–æ–≥–æ –∞—É–¥–∏—Ç–∞"""
        try:
            settings = load_settings()
            if not settings["google_sheets"].get("enabled", False):
                return
            
            spreadsheet = google_sheets.client.open_by_key(
                settings["google_sheets"]["spreadsheet_id"]
            )
            
            try:
                audit_sheet = spreadsheet.worksheet("–ö–∞–¥—Ä–æ–≤—ã–π –∞—É–¥–∏—Ç")
            except gspread.WorksheetNotFound:
                audit_sheet = spreadsheet.add_worksheet(title="–ö–∞–¥—Ä–æ–≤—ã–π –∞—É–¥–∏—Ç", rows="1000", cols="10")
                headers = ["–î–∞—Ç–∞", "–°–æ—Ç—Ä—É–¥–Ω–∏–∫", "–°—Ç–∞—Ç–∏–∫", "–î–µ–π—Å—Ç–≤–∏–µ", "–ó–≤–∞–Ω–∏–µ", "–ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ", "–ò—Å—Ç–æ—á–Ω–∏–∫"]
                audit_sheet.insert_row(headers, 1)
            
            row_data = [
                datetime.datetime.now().strftime("%Y-%m-%d %H:%M"),
                audit_data['full_name'],
                audit_data['static'],
                audit_data['action'],
                audit_data['rank'],
                audit_data['division'],
                "Google –¢–∞–±–ª–∏—Ü–∞"
            ]
            
            audit_sheet.append_row(row_data)
            
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∞—É–¥–∏—Ç–∞: {e}")
    
    async def update_personnel_sheet(self, audit_data):
        """–û–±–Ω–æ–≤–∏—Ç—å –ª–∏—á–Ω—ã–π —Å–æ—Å—Ç–∞–≤"""
        try:
            settings = load_settings()
            if not settings["google_sheets"].get("enabled", False):
                return
            
            spreadsheet = google_sheets.client.open_by_key(
                settings["google_sheets"]["spreadsheet_id"]
            )
            
            try:
                personnel_sheet = spreadsheet.worksheet("–õ–∏—á–Ω—ã–π —Å–æ—Å—Ç–∞–≤")
                
                if audit_data['action'] == '–ü—Ä–∏–Ω—è—Ç':
                    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
                    row_data = [
                        audit_data['discord_id'] or '',
                        audit_data['full_name'],
                        audit_data['static'],
                        audit_data['rank'],
                        audit_data['division'],
                        '',
                        datetime.datetime.now().strftime("%Y-%m-%d"),
                        "–ê–∫—Ç–∏–≤–µ–Ω"
                    ]
                    personnel_sheet.append_row(row_data)
                    
                elif audit_data['action'] == '–£–≤–æ–ª–µ–Ω' and audit_data['discord_id']:
                    # –ò—â–µ–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –ø–æ Discord ID
                    try:
                        cell = personnel_sheet.find(audit_data['discord_id'])
                        if cell:
                            personnel_sheet.update_cell(cell.row, 8, "–£–≤–æ–ª–µ–Ω")
                            personnel_sheet.update_cell(cell.row, 9, datetime.datetime.now().strftime("%Y-%m-%d"))
                    except gspread.CellNotFound:
                        print("–°–æ—Ç—Ä—É–¥–Ω–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ª–∏—á–Ω–æ–º —Å–æ—Å—Ç–∞–≤–µ")
                        
            except gspread.WorksheetNotFound:
                print("–õ–∏—Å—Ç '–õ–∏—á–Ω—ã–π —Å–æ—Å—Ç–∞–≤' –Ω–µ –Ω–∞–π–¥–µ–Ω")
                
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–∞–≤–∞: {e}")
    
    def start_server(self):
        """–ó–∞–ø—É—Å–∫ HTTP —Å–µ—Ä–≤–µ—Ä–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ"""
        def run_server():
            loop = asyncio.new_event_loop()
            asyncio.set_event_loop(loop)
            
            async def start():
                self.runner = web.AppRunner(self.app)
                await self.runner.setup()
                
                self.site = web.TCPSite(self.runner, self.host, self.port)
                await self.site.start()
                
                print(f"üåê HTTP —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://{self.host}:{self.port}")
                print("üìã Endpoints:")
                print("   POST /google-sheets-audit - –ü—Ä–∏–µ–º –∞—É–¥–∏—Ç–æ–≤ –∏–∑ Google –¢–∞–±–ª–∏—Ü")
                print("   GET  /health - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –±–æ—Ç–∞")
                print("   GET  / - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–µ—Ä–µ")
            
            loop.run_until_complete(start())
            loop.run_forever()
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
        server_thread = threading.Thread(target=run_server, daemon=True)
        server_thread.start()
        
        return server_thread
    
    async def stop_server(self):
        """–û—Å—Ç–∞–Ω–æ–≤–∫–∞ HTTP —Å–µ—Ä–≤–µ—Ä–∞"""
        if self.runner:
            await self.runner.cleanup()



async def handle_recruitment_approve(interaction: discord.Interaction):
    try:
        if not has_recruitment_permissions(interaction.user):
            if not interaction.response.is_done():
                await interaction.response.send_message("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –æ–¥–æ–±—Ä–µ–Ω–∏—è –∑–∞—è–≤–æ–∫!", ephemeral=True)
            return

        embed = interaction.message.embeds[0]
        user_id = int(embed.fields[0].value[2:-1])
        member = interaction.guild.get_member(user_id)
        
        if not member:
            if not interaction.response.is_done():
                await interaction.response.send_message("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ!", ephemeral=True)
            return

        full_name = None
        static = None
        reason = None
        
        for field in embed.fields:
            if field.name == "üìù –ò–º—è –§–∞–º–∏–ª–∏—è":
                full_name = field.value
            elif field.name == "üî¢ –°—Ç–∞—Ç–∏–∫":
                static = field.value
            elif field.name == "üìã –ü–æ—Ä—è–¥–æ–∫ –Ω–∞–±–æ—Ä–∞":
                reason = field.value
        
        if not full_name:
            if not interaction.response.is_done():
                await interaction.response.send_message("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ–ª–µ —Å –∏–º–µ–Ω–µ–º –≤ –∑–∞—è–≤–∫–µ!", ephemeral=True)
            return

        try:
            await member.edit(nick=f"–ö—É—Ä—Å–∞–Ω—Ç | {full_name}")
        except discord.Forbidden:
            pass

        HRSystem.add_personnel(member, interaction.user)
        updates = {
            "name": full_name,
            "static": static if static else "",
            "division": "–ê–∫–∞–¥–µ–º–∏—è –§–°–ò–ù"
        }
        HRSystem.update_personnel(member, **updates)

        try:
            roles_to_add = [
                discord.utils.get(interaction.guild.roles, name="========[üîó]–û—Ç–¥–µ–ª[üîó]========"),
                discord.utils.get(interaction.guild.roles, name="–†—è–¥–æ–≤–æ–π –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π —Å–ª—É–∂–±—ã"),
                discord.utils.get(interaction.guild.roles, name="–ê–∫–∞–¥–µ–º–∏—è –§–°–ò–ù"),
                discord.utils.get(interaction.guild.roles, name="========[üìò]–î–æ—Å—Ç—É–ø[üìò]========"),
                discord.utils.get(interaction.guild.roles, name="[¬©Ô∏è] –°–æ—Ç—Ä—É–¥–Ω–∏–∫ –§–°–ò–ù"),
                discord.utils.get(interaction.guild.roles, name="========[üë®üèª‚Äç‚úàÔ∏è]–ó–≤–∞–Ω–∏–µ[üë®üèª‚Äç‚úàÔ∏è]========")
            ]
            
            for role in roles_to_add:
                if role:
                    await member.add_roles(role)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–¥–∞—á–µ —Ä–æ–ª–µ–π: {e}")

        new_embed = embed.copy()
        new_embed.color = discord.Color.green()
        new_embed.add_field(
            name="‚úÖ –°—Ç–∞—Ç—É—Å",
            value=f"–û–¥–æ–±—Ä–µ–Ω–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–º –æ—Ç–¥–µ–ª–∞ –∫–∞–¥—Ä–æ–≤ {interaction.user.mention}",
            inline=False
        )

        await interaction.message.edit(embed=new_embed, view=None)

        # –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô –í–´–ó–û–í - —É–±—Ä–∞–Ω—ã –ª–∏—à–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
        await HRSystem.log_action(
            action="–ü—Ä–∏–Ω—è—Ç–∏–µ –Ω–∞ —Å–ª—É–∂–±—É",
            target=member,
            executor=interaction.user,
            reason=reason or "–ù–µ —É–∫–∞–∑–∞–Ω–∞",
            new_rank="–†—è–¥–æ–≤–æ–π –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π —Å–ª—É–∂–±—ã"
        )

        try:
            await member.send("üéâ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –±—ã–ª–∞ –æ–¥–æ–±—Ä–µ–Ω–∞! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ä—è–¥—ã –§–°–ò–ù!")
        except discord.Forbidden:
            pass

        if not interaction.response.is_done():
            await interaction.response.send_message("‚úÖ –ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ–¥–æ–±—Ä–µ–Ω–∞!", ephemeral=True)

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ handle_recruitment_approve: {e}")
        if not interaction.response.is_done():
            await interaction.response.send_message(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞—è–≤–∫–∏!",
                ephemeral=True
            )

async def handle_dismissal_approve(interaction: discord.Interaction):
    if not has_dismissal_permissions(interaction.user):
        await interaction.response.send_message("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –æ–¥–æ–±—Ä–µ–Ω–∏—è —Ä–∞–ø–æ—Ä—Ç–æ–≤!", ephemeral=True)
        return
    
    embed = interaction.message.embeds[0]
    user_id = int(embed.description.split()[1][2:-1])
    member = interaction.guild.get_member(user_id)
    
    if not member:
        await interaction.response.send_message("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ!", ephemeral=True)
        return
    
    data = HRSystem.get_personnel(member)
    
    reason = None
    for field in embed.fields:
        if field.name == "–ü—Ä–∏—á–∏–Ω–∞ —É–≤–æ–ª—å–Ω–µ–Ω–∏—è":
            reason = field.value
            break
    
    if data:
        full_name = data["name"]

        rank = data.get("rank", "–ù–µ —É–∫–∞–∑–∞–Ω–æ")
        static = data.get("static", "–ù–µ —É–∫–∞–∑–∞–Ω")
        position = data.get("position", "–ù–µ —É–∫–∞–∑–∞–Ω–∞")
        
        roles_to_remove = [role for role in member.roles if role.name != "@everyone"]
        if roles_to_remove:
            await member.remove_roles(*roles_to_remove)
        
        try:
            await member.edit(nick=f"–£–≤–æ–ª–µ–Ω | {full_name}")
        except discord.Forbidden:
            pass
        
        # –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô –í–´–ó–û–í
        await HRSystem.log_action(
            action="–£–≤–æ–ª—å–Ω–µ–Ω–∏–µ",
            target=member,
            executor=interaction.user,
            reason=reason or "–ù–µ —É–∫–∞–∑–∞–Ω–∞",
            old_rank=rank
        )
    else:
        try:
            await member.edit(nick=f"–£–≤–æ–ª–µ–Ω | {member.display_name}")
        except discord.Forbidden:
            pass
        
        # –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô –í–´–ó–û–í
        await HRSystem.log_action(
            action="–£–≤–æ–ª—å–Ω–µ–Ω–∏–µ (–Ω–µ –±—ã–ª –≤ –±–∞–∑–µ)",
            target=member,
            executor=interaction.user,
            reason=reason or "–ù–µ —É–∫–∞–∑–∞–Ω–∞"
        )
    
    HRSystem.remove_personnel(member)

    new_embed = embed.copy()
    new_embed.color = discord.Color.green()
    new_embed.add_field(
        name="‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ", 
        value=f"–°–æ—Ç—Ä—É–¥–Ω–∏–∫: {interaction.user.mention}\n–í—Ä–µ–º—è: {datetime.datetime.now().strftime('%d.%m.%Y %H:%M')}", 
        inline=True
    )
    
    await interaction.message.edit(embed=new_embed, view=None)
    
    try:
        await member.send("‚ÑπÔ∏è –í–∞—à —Ä–∞–ø–æ—Ä—Ç –Ω–∞ —É–≤–æ–ª—å–Ω–µ–Ω–∏–µ –±—ã–ª –æ–¥–æ–±—Ä–µ–Ω. –°–ø–∞—Å–∏–±–æ –∑–∞ —Å–ª—É–∂–±—É!")
    except discord.Forbidden:
        pass
    
    await interaction.response.send_message("‚úÖ –†–∞–ø–æ—Ä—Ç –Ω–∞ —É–≤–æ–ª—å–Ω–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ–¥–æ–±—Ä–µ–Ω!", ephemeral=True)


# Google Sheets –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è
class GoogleSheetsManager:
    def __init__(self):
        self.credentials_file = GOOGLE_CREDS_FILE
        self.spreadsheet_id = None
        self.worksheet_name = "–ö–∞–¥—Ä–æ–≤—ã–π –∞—É–¥–∏—Ç"
        self.client = None
        self.sheet = None
        
    def initialize(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Google Sheets"""
        if not os.path.exists(self.credentials_file):
            print("‚ö†Ô∏è –§–∞–π–ª —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö Google –Ω–µ –Ω–∞–π–¥–µ–Ω. –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Google Sheets –æ—Ç–∫–ª—é—á–µ–Ω–∞.")
            return False
            
        try:
            scope = [
                'https://spreadsheets.google.com/feeds',
                'https://www.googleapis.com/auth/drive'
            ]
            creds = ServiceAccountCredentials.from_json_keyfile_name(self.credentials_file, scope)
            self.client = gspread.authorize(creds)
            print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Google Sheets —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
            return True
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Google Sheets: {e}")
            return False
    
    def setup_spreadsheet(self, spreadsheet_id=None, worksheet_name=None):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã"""
        if not self.client:
            return False
            
        try:
            if spreadsheet_id:
                self.spreadsheet_id = spreadsheet_id
            if worksheet_name:
                self.worksheet_name = worksheet_name
                
            if self.spreadsheet_id:
                spreadsheet = self.client.open_by_key(self.spreadsheet_id)
                try:
                    self.sheet = spreadsheet.worksheet(self.worksheet_name)
                except gspread.WorksheetNotFound:
                    self.sheet = spreadsheet.add_worksheet(title=self.worksheet_name, rows="1000", cols="20")
                
                # –°–æ–∑–¥–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏, –µ—Å–ª–∏ –ª–∏—Å—Ç –ø—É—Å—Ç–æ–π
                if not self.sheet.get_all_values():
                    headers = [
                        "–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è", "–î–µ–π—Å—Ç–≤–∏–µ", "–¶–µ–ª–µ–≤–æ–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫", "ID —Ü–µ–ª–µ–≤–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞",
                        "–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å", "ID –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è", "–ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ", "–ó–≤–∞–Ω–∏–µ", "–î–æ–ª–∂–Ω–æ—Å—Ç—å",
                        "–°—Ç–∞—Ç–∏–∫", "–ü—Ä–∏—á–∏–Ω–∞", "–°—Ç–∞—Ä–æ–µ –∑–≤–∞–Ω–∏–µ", "–ù–æ–≤–æ–µ –∑–≤–∞–Ω–∏–µ", "–°—Ç–∞—Ä–∞—è –¥–æ–ª–∂–Ω–æ—Å—Ç—å",
                        "–ù–æ–≤–∞—è –¥–æ–ª–∂–Ω–æ—Å—Ç—å", "–°—Ç–∞—Ä–æ–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ", "–ù–æ–≤–æ–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ"
                    ]
                    self.sheet.insert_row(headers, 1)
                
                print(f"‚úÖ –¢–∞–±–ª–∏—Ü–∞ Google Sheets –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞: {self.worksheet_name}")
                return True
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–∞–±–ª–∏—Ü—ã: {e}")
            return False
    
    def log_to_sheet(self, log_data):
        """–ó–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –≤ Google Sheet"""
        if not self.sheet:
            print("‚ùå –õ–∏—Å—Ç Google Sheets –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
            return False

        try:
            row_data = [
                log_data.get("timestamp", ""),
                log_data.get("action", ""),
                log_data.get("target_name", ""),
                log_data.get("target_id", ""),  # –£–∂–µ —Å—Ç—Ä–æ–∫–∞
                log_data.get("executor_name", ""),
                log_data.get("executor_id", ""),  # –£–∂–µ —Å—Ç—Ä–æ–∫–∞
                log_data.get("division", ""),
                log_data.get("rank", ""),
                log_data.get("position", ""),
                log_data.get("static", ""),
                log_data.get("reason", ""),
                log_data.get("old_rank", ""),
                log_data.get("new_rank", ""),
                log_data.get("old_position", ""),
                log_data.get("new_position", ""),
                log_data.get("old_division", ""),
                log_data.get("new_division", "")
            ]

            print(f"üìù –ó–∞–ø–∏—Å—å —Å—Ç—Ä–æ–∫–∏ –≤ Google Sheets: {row_data}")

            self.sheet.append_row(row_data)
            print("‚úÖ –î–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∞–Ω—ã –≤ Google Sheets")
            return True

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –≤ Google Sheets: {e}")
            print(f"‚ùå –î–∞–Ω–Ω—ã–µ –∫–æ—Ç–æ—Ä—ã–µ –ø—ã—Ç–∞–ª–∏—Å—å –∑–∞–ø–∏—Å–∞—Ç—å: {log_data}")
            return False

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ Google Sheets
google_sheets = GoogleSheetsManager()

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–∞–Ω–Ω—ã–º–∏
def load_data():
    if not os.path.exists(DATA_FILE):
        with open(DATA_FILE, "w", encoding="utf-8") as f:
            json.dump({"personnel": {}}, f)
        return {"personnel": {}}
    
    try:
        with open(DATA_FILE, "r", encoding="utf-8") as f:
            content = f.read()
            if not content.strip():
                return {"personnel": {}}
            return json.loads(content)
    except (json.JSONDecodeError, FileNotFoundError):
        with open(DATA_FILE, "w", encoding="utf-8") as f:
            json.dump({"personnel": {}}, f)
        return {"personnel": {}}

def save_data(data):
    temp_file = DATA_FILE + ".tmp"
    with open(temp_file, "w", encoding="utf-8") as f:
        json.dump(data, f, ensure_ascii=False, indent=4)
    
    if os.path.exists(DATA_FILE):
        os.replace(temp_file, DATA_FILE)
    else:
        os.rename(temp_file, DATA_FILE)

def load_settings():
    if not os.path.exists(SETTINGS_FILE):
        default_settings = {
            "channels": {
                "recruitment_requests": REQUESTS_CHANNEL,
                "dismissal_requests": DISMISSAL_CHANNEL,
                "logs": LOG_CHANNEL,
                "status": REQUEST_STATUS_CHANNEL
            },
            "roles": {
                "recruitment": None,
                "hr_management": None,
                "dismissal": None
            },
            "admins": [BOT_ADMIN_ID],
            "moderators": [],
            "google_sheets": {
                "spreadsheet_id": None,
                "worksheet_name": "–ö–∞–¥—Ä–æ–≤—ã–π –∞—É–¥–∏—Ç",
                "enabled": False
            }
        }
        with open(SETTINGS_FILE, "w", encoding="utf-8") as f:
            json.dump(default_settings, f, ensure_ascii=False, indent=4)
        return default_settings
    
    try:
        with open(SETTINGS_FILE, "r", encoding="utf-8") as f:
            content = f.read()
            if not content.strip():
                return load_settings()  # –ü–µ—Ä–µ—Å–æ–∑–¥–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –µ—Å–ª–∏ —Ñ–∞–π–ª –ø—É—Å—Ç–æ–π
            
            settings = json.loads(content)
            
            # –ú–∏–≥—Ä–∞—Ü–∏—è —Å—Ç–∞—Ä—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫
            if "google_sheets" not in settings:
                settings["google_sheets"] = {
                    "spreadsheet_id": None,
                    "worksheet_name": "–ö–∞–¥—Ä–æ–≤—ã–π –∞—É–¥–∏—Ç",
                    "enabled": False
                }
            
            # –ú–∏–≥—Ä–∞—Ü–∏—è —Å—Ç–∞—Ä—ã—Ö –∫–∞–Ω–∞–ª–æ–≤
            if "requests" in settings.get("channels", {}):
                if "recruitment_requests" not in settings["channels"]:
                    settings["channels"]["recruitment_requests"] = settings["channels"]["requests"]
                if "dismissal_requests" not in settings["channels"]:
                    settings["channels"]["dismissal_requests"] = settings["channels"]["requests"]
                # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π –∫–ª—é—á –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
                # del settings["channels"]["requests"]
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
            save_settings(settings)
            
            return settings
            
    except (json.JSONDecodeError, FileNotFoundError):
        return load_settings()  # –ü–µ—Ä–µ—Å–æ–∑–¥–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏ –æ—à–∏–±–∫–µ

def save_settings(settings):
    temp_file = SETTINGS_FILE + ".tmp"
    with open(temp_file, "w", encoding="utf-8") as f:
        json.dump(settings, f, ensure_ascii=False, indent=4)
    
    if os.path.exists(SETTINGS_FILE):
        os.replace(temp_file, SETTINGS_FILE)
    else:
        os.rename(temp_file, SETTINGS_FILE)

# –§—É–Ω–∫—Ü–∏–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤
def is_bot_admin(member: discord.Member):
    settings = load_settings()
    return member.id == BOT_ADMIN_ID or member.id in settings.get("admins", [])

def is_bot_moderator(member: discord.Member):
    settings = load_settings()
    return member.id in settings.get("moderators", []) or is_bot_admin(member)

def has_recruitment_permissions(member: discord.Member):
    settings = load_settings()
    recruitment_role_id = settings["roles"].get("recruitment")
    
    if is_bot_admin(member) or is_bot_moderator(member):
        return True
    
    if recruitment_role_id:
        return any(role.id == recruitment_role_id for role in member.roles)
    
    # Fallback to old system
    return has_hr_permissions(member)

def has_hr_permissions(member: discord.Member):
    settings = load_settings()
    hr_role_id = settings["roles"].get("hr_management")
    
    if is_bot_admin(member) or is_bot_moderator(member):
        return True
    
    if hr_role_id:
        return any(role.id == hr_role_id for role in member.roles)
    
    if member.id == BOT_ADMIN_ID:
        return True
    
    # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª–Ω–æ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏—è –∑–≤–∞–Ω–∏—è
    for role in member.roles:
        if role.name in RANK_HIERARCHY:
            try:
                rank_index = RANK_HIERARCHY.index(role.name)
                min_rank_index = RANK_HIERARCHY.index(MIN_RANK_FOR_HR)
                return rank_index >= min_rank_index
            except ValueError:
                continue  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –µ—Å–ª–∏ –∑–≤–∞–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ —Å–ø–∏—Å–∫–µ
    return False

def has_dismissal_permissions(member: discord.Member):
    settings = load_settings()
    dismissal_role_id = settings["roles"].get("dismissal")
    
    if is_bot_admin(member) or is_bot_moderator(member):
        return True
    
    if dismissal_role_id:
        return any(role.id == dismissal_role_id for role in member.roles)
    
    # Fallback to old system
    return has_hr_permissions(member)

# –ö–ª–∞—Å—Å HR —Å–∏—Å—Ç–µ–º—ã
class HRSystem:
    @staticmethod
    async def log_action(
        action: str,
        target: discord.Member,
        executor: discord.Member,
        reason: str = None,
        old_rank: str = None,
        new_rank: str = None,
        old_position: str = None,
        new_position: str = None,
        old_division: str = None,  # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ —Å division –Ω–∞ old_division
        new_division: str = None   # –î–æ–±–∞–≤–ª–µ–Ω new_division
    ):
        settings = load_settings()
        log_channel_id = settings["channels"].get("logs", LOG_CHANNEL)
        log_channel = bot.get_channel(log_channel_id)

        if log_channel is None:
            print("–û—à–∏–±–∫–∞: –∫–∞–Ω–∞–ª –ª–æ–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return

        reason = reason or "–ù–µ —É–∫–∞–∑–∞–Ω–∞"
        old_rank = old_rank or "–ù–µ —É–∫–∞–∑–∞–Ω–æ"
        new_rank = new_rank or "–ù–µ —É–∫–∞–∑–∞–Ω–æ"
        old_position = old_position or "–ù–µ —É–∫–∞–∑–∞–Ω–∞"
        new_position = new_position or "–ù–µ —É–∫–∞–∑–∞–Ω–∞"
        old_division = old_division or "–ù–µ —É–∫–∞–∑–∞–Ω–æ"  # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ
        new_division = new_division or "–ù–µ —É–∫–∞–∑–∞–Ω–æ"  # –î–æ–±–∞–≤–ª–µ–Ω–æ

        executor_data = HRSystem.get_personnel(executor) or {}
        executor_name = executor_data.get("name", executor.display_name)
        executor_static = executor_data.get("static", "–ù–µ —É–∫–∞–∑–∞–Ω")

        target_data = HRSystem.get_personnel(target) or {}
        target_division = target_data.get("division", "–ù–µ —É–∫–∞–∑–∞–Ω–æ")  # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ
        target_rank = target_data.get("rank", "–ù–µ —É–∫–∞–∑–∞–Ω–æ")
        target_position = target_data.get("position", "–ù–µ —É–∫–∞–∑–∞–Ω–∞")
        target_static = target_data.get("static", "–ù–µ —É–∫–∞–∑–∞–Ω")

        embed = discord.Embed(
            title=f"üìù –ö–∞–¥—Ä–æ–≤—ã–π –∞—É–¥–∏—Ç –§–°–ò–ù",
            color=0x2E73F0,
            timestamp=datetime.datetime.now()
        )

        embed.set_thumbnail(url="https://cdn.discordapp.com/attachments/1401272012185276599/1412833532266418236/uvd.png?ex=68b9bb43&is=68b869c3&hm=aac09a72f63e8158a848deeee3dc279d6db20ead145b21b952e892567bc01fcb&")

        embed.add_field(
            name="–ö–∞–¥—Ä–æ–≤—É—é –æ—Ç–ø–∏—Å–∞–ª", 
            value=f"{executor_name} | {executor_static}",
            inline=False
        )
        embed.add_field(
            name="–ò–º—è –§–∞–º–∏–ª–∏—è | 6 —Ü–∏—Ñ—Ä —Å—Ç–∞—Ç–∏–∫–∞", 
            value=f"{target_data.get('name', target.display_name)} | {target_data.get('static', '–ù–µ —É–∫–∞–∑–∞–Ω')}", 
            inline=False
        )

        embed.add_field(name="–î–∞—Ç–∞ –î–µ–π—Å—Ç–≤–∏—è", value=datetime.datetime.now().strftime("%d-%m-%Y"), inline=False)
        embed.add_field(name="–î–µ–π—Å—Ç–≤–∏–µ", value=action, inline=False)
        text_before_embed = f"{target.mention}"
        embed.add_field(name="–ó–≤–∞–Ω–∏–µ", value=f"{target_rank}", inline=False)
        embed.add_field(name="–ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ", value=f"{target_division}", inline=False)  # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ

        if reason:
            embed.add_field(name="–ü—Ä–∏—á–∏–Ω–∞", value=reason, inline=False)

        try:
            await log_channel.send(content=text_before_embed, embed=embed)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ª–æ–≥–∞: {e}")

        # –ó–∞–ø–∏—Å—å –≤ Google Sheets
        settings = load_settings()
        if settings["google_sheets"].get("enabled", False) and google_sheets.sheet:
            log_data = {
                "timestamp": datetime.datetime.now().strftime("%d.%m.%Y %H:%M"),
                "action": action,
                "target_name": target_data.get('name', target.display_name),
                "target_id": str(target.id),
                "executor_name": executor_name,
                "division": target_division,  # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ
                "rank": target_rank,
                "position": target_position,
                "static": target_static,
                "reason": reason
            }
            google_sheets.log_to_sheet(log_data)

    @staticmethod
    async def update_personnel_sheet(member: discord.Member, action: str, old_data: dict = None):
        """–û–±–Ω–æ–≤–∏—Ç—å –ª–∏—Å—Ç –ª–∏—á–Ω–æ–≥–æ —Å–æ—Å—Ç–∞–≤–∞ –≤ Google Sheets"""
        settings = load_settings()
        if not settings["google_sheets"].get("enabled", False):
            return
        
        try:
            spreadsheet = google_sheets.client.open_by_key(
                settings["google_sheets"]["spreadsheet_id"]
            )
            
            # –ò—â–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –ª–∏—Å—Ç "–õ–∏—á–Ω—ã–π —Å–æ—Å—Ç–∞–≤"
            try:
                personnel_sheet = spreadsheet.worksheet("–õ–∏—á–Ω—ã–π —Å–æ—Å—Ç–∞–≤")
            except gspread.WorksheetNotFound:
                personnel_sheet = spreadsheet.add_worksheet(title="–õ–∏—á–Ω—ã–π —Å–æ—Å—Ç–∞–≤", rows="1000", cols="10")
                headers = ["Discord ID", "–ò–º—è –§–∞–º–∏–ª–∏—è", "–°—Ç–∞—Ç–∏–∫", "–ó–≤–∞–Ω–∏–µ", "–ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ", "–î–æ–ª–∂–Ω–æ—Å—Ç—å", "–î–∞—Ç–∞ –ø—Ä–∏–µ–º–∞", "–°—Ç–∞—Ç—É—Å"]
                personnel_sheet.insert_row(headers, 1)
            
            data = HRSystem.get_personnel(member) or {}
            
            if action == "hired":
                # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
                row_data = [
                    str(member.id),
                    data.get("name", ""),
                    data.get("static", ""),
                    data.get("rank", ""),
                    data.get("division", ""),
                    data.get("position", ""),
                    data.get("join_date", ""),
                    "–ê–∫—Ç–∏–≤–µ–Ω"
                ]
                personnel_sheet.append_row(row_data)
                
            elif action == "fired":
                # –ü–æ–º–µ—á–∞–µ–º –∫–∞–∫ —É–≤–æ–ª–µ–Ω–Ω–æ–≥–æ
                cell = personnel_sheet.find(str(member.id))
                if cell:
                    personnel_sheet.update_cell(cell.row, 8, "–£–≤–æ–ª–µ–Ω")  # –°—Ç–∞—Ç—É—Å
                    
            elif action == "updated":
                # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
                cell = personnel_sheet.find(str(member.id))
                if cell:
                    personnel_sheet.update_cell(cell.row, 2, data.get("name", ""))  # –ò–º—è
                    personnel_sheet.update_cell(cell.row, 3, data.get("static", ""))  # –°—Ç–∞—Ç–∏–∫
                    personnel_sheet.update_cell(cell.row, 4, data.get("rank", ""))  # –ó–≤–∞–Ω–∏–µ
                    personnel_sheet.update_cell(cell.row, 5, data.get("division", ""))  # –ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ
                    personnel_sheet.update_cell(cell.row, 6, data.get("position", ""))  # –î–æ–ª–∂–Ω–æ—Å—Ç—å
            
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ª–∏—á–Ω–æ–≥–æ —Å–æ—Å—Ç–∞–≤–∞: {e}")

    @staticmethod
    def add_personnel(member: discord.Member, recruiter: discord.Member, division: str = "–ê–∫–∞–¥–µ–º–∏—è –§–°–ò–ù"):
        data = load_data()

        name_parts = member.display_name.split()
        name = name_parts[0] if len(name_parts) > 0 else member.name
        surname = name_parts[1] if len(name_parts) > 1 else ""
        full_name = f"{name} {surname}".strip()

        data["personnel"][str(member.id)] = {
            "name": full_name,
            "division": division,
            "rank": "–†—è–¥–æ–≤–æ–π –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π —Å–ª—É–∂–±—ã",
            "position": "",
            "recruiter": recruiter.display_name,
            "join_date": datetime.datetime.now().strftime("%d.%m.%Y %H:%M"),
            "static": ""
        }

        save_data(data)

        # –û–±–Ω–æ–≤–ª—è–µ–º Google Sheets
        bot.loop.create_task(HRSystem.update_personnel_sheet(member, "hired"))

        return True
    
    async def process_audit(self, audit_data):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—É–¥–∏—Ç–∞ –∏–∑ Google –¢–∞–±–ª–∏—Ü"""
        try:
            # –°–æ–∑–¥–∞–µ–º embed —Ç–∞–∫–æ–π –∂–µ –∫–∞–∫ —É –±–æ—Ç–∞
            action_colors = {
                "–ü—Ä–∏–Ω—è—Ç": 0x00FF00,    # –ó–µ–ª–µ–Ω—ã–π
                "–£–≤–æ–ª–µ–Ω": 0xFF0000,    # –ö—Ä–∞—Å–Ω—ã–π
                "–ü–æ–≤—ã—à–µ–Ω": 0xFFA500,   # –û—Ä–∞–Ω–∂–µ–≤—ã–π
                "–ü–æ–Ω–∏–∂–µ–Ω": 0xFFFF00,   # –ñ–µ–ª—Ç—ã–π
                "–ü–µ—Ä–µ–≤–µ–¥–µ–Ω": 0xFFFF00  # –ñ–µ–ª—Ç—ã–π
            }

            color = action_colors.get(audit_data['action'], 0x2E73F0)

            embed = discord.Embed(
                title="üìù –ö–∞–¥—Ä–æ–≤—ã–π –∞—É–¥–∏—Ç –§–°–ò–ù",
                color=color,
                timestamp=datetime.datetime.now()
            )

            embed.set_thumbnail(url="https://cdn.discordapp.com/attachments/1401272012185276599/1412833532266418236/uvd.png?ex=68b9bb43&is=68b869c3&hm=aac09a72f63e8158a848deeee3dc279d6db20ead145b21b952e892567bc01fcb&")

            # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—è
            target_mention = f"<@{audit_data['discord_id']}>" if audit_data['discord_id'] else audit_data['full_name']

            embed.add_field(
                name="–ö–∞–¥—Ä–æ–≤—É—é –æ—Ç–ø–∏—Å–∞–ª", 
                value="Google –¢–∞–±–ª–∏—Ü–∞",
                inline=False
            )

            embed.add_field(
                name="–ò–º—è –§–∞–º–∏–ª–∏—è | 6 —Ü–∏—Ñ—Ä —Å—Ç–∞—Ç–∏–∫–∞", 
                value=f"{audit_data['full_name']} | {audit_data['static']}", 
                inline=False
            )

            embed.add_field(name="–î–∞—Ç–∞ –î–µ–π—Å—Ç–≤–∏—è", value=datetime.datetime.now().strftime("%d-%m-%Y"), inline=False)
            embed.add_field(name="–î–µ–π—Å—Ç–≤–∏–µ", value=audit_data['action'], inline=False)

            if audit_data['discord_id']:
                embed.add_field(name="–°–æ—Ç—Ä—É–¥–Ω–∏–∫", value=target_mention, inline=False)

            embed.add_field(name="–ó–≤–∞–Ω–∏–µ", value=audit_data['rank'], inline=True)
            embed.add_field(name="–ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ", value=audit_data['division'], inline=True)
            embed.add_field(name="–ò—Å—Ç–æ—á–Ω–∏–∫", value="Google –¢–∞–±–ª–∏—Ü–∞", inline=True)

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –∫–∞–Ω–∞–ª –∞—É–¥–∏—Ç–∞
            settings = load_settings()
            audit_channel_id = settings["channels"].get("logs", LOG_CHANNEL)
            channel = self.bot.get_channel(audit_channel_id)

            if channel:
                await channel.send(embed=embed)

                # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –ª–∏—Å—Ç –∫–∞–¥—Ä–æ–≤–æ–≥–æ –∞—É–¥–∏—Ç–∞
                await self.update_audit_sheet(audit_data)

                # –û–±–Ω–æ–≤–ª—è–µ–º –ª–∏—á–Ω—ã–π —Å–æ—Å—Ç–∞–≤ –µ—Å–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ - –ø—Ä–∏–Ω—è—Ç –∏–ª–∏ —É–≤–æ–ª–µ–Ω
                if audit_data['action'] in ['–ü—Ä–∏–Ω—è—Ç', '–£–≤–æ–ª–µ–Ω']:
                    await self.update_personnel_sheet(audit_data)

            return True

        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∞—É–¥–∏—Ç–∞: {e}")
            return False

    @staticmethod
    def update_personnel(member: discord.Member, **kwargs):
        data = load_data()
        if str(member.id) in data["personnel"]:
            data["personnel"][str(member.id)].update(kwargs)
            return save_data(data)
        return False

    @staticmethod
    def get_personnel(member: discord.Member):
        """–ü–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞"""
        data = load_data()
        return data["personnel"].get(str(member.id))

    @staticmethod
    def remove_personnel(member: discord.Member):
        """–£–¥–∞–ª–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
        data = load_data()
        if str(member.id) in data["personnel"]:
            del data["personnel"][str(member.id)]
            save_data(data)
            
            # –û–±–Ω–æ–≤–ª—è–µ–º Google Sheets
            bot.loop.create_task(HRSystem.update_personnel_sheet(member, "fired"))
            
            return True
        return False

    @staticmethod
    def get_all_personnel(division: str = None):
        data = load_data()
        if division:
            return {k: v for k, v in data["personnel"].items() if v["division"] == division}
        return data["personnel"]

class ModeratorRegistrationView(View):
    def __init__(self):
        super().__init__(timeout=None)
        
        register_button = Button(
            label="–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è", 
            style=discord.ButtonStyle.primary, 
            emoji="üìù", 
            custom_id="moderator_register_button"
        )
        self.add_item(register_button)

class ModeratorRegistrationForm(Modal, title='–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞'):
    name = TextInput(
        label='–ò–º—è –§–∞–º–∏–ª–∏—è',
        placeholder='–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤',
        required=True,
        max_length=100
    )
    
    static = TextInput(
        label='–°—Ç–∞—Ç–∏–∫',
        placeholder='XXX-XXX',
        required=True,
        max_length=7
    )
    
    email = TextInput(
        label='–ü–æ—á—Ç–∞ Google',
        placeholder='example@gmail.com',
        required=True
    )

    async def on_submit(self, interaction: discord.Interaction):
        # –û—Ç–ª–æ–∂–∏—Ç—å –æ—Ç–≤–µ—Ç
        await interaction.response.defer(thinking=True, ephemeral=True)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–º
        personnel_data = HRSystem.get_personnel(interaction.user)
        if not personnel_data:
            await interaction.followup.send(
                "‚ùå –í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–º –§–°–ò–ù!",
                ephemeral=True
            )
            return
        
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ Google –¢–∞–±–ª–∏—Ü—É
        settings = load_settings()
        if settings["google_sheets"].get("enabled", False) and google_sheets.sheet:
            try:
                # –ò—â–µ–º –ª–∏—Å—Ç "–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã" –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –µ–≥–æ
                try:
                    mod_sheet = google_sheets.client.open_by_key(
                        settings["google_sheets"]["spreadsheet_id"]
                    ).worksheet("–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã")
                except gspread.WorksheetNotFound:
                    mod_sheet = google_sheets.client.open_by_key(
                        settings["google_sheets"]["spreadsheet_id"]
                    ).add_worksheet(title="–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã", rows="1000", cols="10")
                    headers = ["–î–∞—Ç–∞", "Discord ID", "–ò–º—è –§–∞–º–∏–ª–∏—è", "–°—Ç–∞—Ç–∏–∫", "–ü–æ—á—Ç–∞", "–°—Ç–∞—Ç—É—Å"]
                    mod_sheet.insert_row(headers, 1)
                
                # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å
                row_data = [
                    datetime.datetime.now().strftime("%Y-%m-%d %H:%M"),
                    str(interaction.user.id),
                    self.name.value,
                    self.static.value,
                    self.email.value,
                    "–ù–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏"
                ]
                mod_sheet.append_row(row_data)
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞–º
                admin_embed = discord.Embed(
                    title="üìã –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞",
                    color=discord.Color.orange()
                )
                admin_embed.add_field(name="–°–æ—Ç—Ä—É–¥–Ω–∏–∫", value=f"{interaction.user.mention}", inline=False)
                admin_embed.add_field(name="–ò–º—è –§–∞–º–∏–ª–∏—è", value=self.name.value, inline=True)
                admin_embed.add_field(name="–°—Ç–∞—Ç–∏–∫", value=self.static.value, inline=True)
                admin_embed.add_field(name="–ü–æ—á—Ç–∞", value=self.email.value, inline=False)
                admin_embed.set_footer(text="–¢—Ä–µ–±—É–µ—Ç—Å—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Ç–∞–±–ª–∏—Ü–µ")
                
                # –ò—â–µ–º –∫–∞–Ω–∞–ª –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–≥–∏
                log_channel_id = settings["channels"].get("logs")
                if log_channel_id:
                    channel = bot.get_channel(log_channel_id)
                    if channel:
                        await channel.send(embed=admin_embed)
                
                await interaction.followup.send(
                    "‚úÖ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ! –î–æ—Å—Ç—É–ø –±—É–¥–µ—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤.",
                    ephemeral=True
                )
                
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –∑–∞—è–≤–∫–∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞: {e}")
                await interaction.followup.send(
                    "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞—è–≤–∫–∏!",
                    ephemeral=True
                )

class RecruitmentButtonView(View):
    def __init__(self):
        super().__init__(timeout=None)
        
        recruitment_button = Button(
            label="–ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ", 
            style=discord.ButtonStyle.green, 
            emoji="üéñÔ∏è", 
            custom_id="recruitment_main_button"
        )
        self.add_item(recruitment_button)
    
# –ú–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞
class EditPersonnelModal(Modal, title='–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞'):
    def __init__(self, member: discord.Member):
        super().__init__()
        self.member = member
        data = HRSystem.get_personnel(member) or {}
        
        self.name = TextInput(
            label='–ò–º—è',
            default=data.get("name", "").split()[0] if data.get("name") else "",
            required=True
        )
        self.surname = TextInput(
            label='–§–∞–º–∏–ª–∏—è',
            default=data.get("name", "").split()[1] if data.get("name") and len(data.get("name", "").split()) > 1 else "",
            required=True
        )
        self.static = TextInput(
            label='–°—Ç–∞—Ç–∏–∫',
            default=data.get("static", ""),
            required=False
        )
        self.position = TextInput(
            label='–î–æ–ª–∂–Ω–æ—Å—Ç—å',
            default=data.get("position", ""),
            required=False
        )
        
        self.add_item(self.name)
        self.add_item(self.surname)
        self.add_item(self.static)
        self.add_item(self.position)
    
    async def on_submit(self, interaction: discord.Interaction):
        old_data = HRSystem.get_personnel(self.member) or {}
        updates = {
            "name": f"{self.name.value} {self.surname.value}",
            "static": self.static.value,
            "position": self.position.value
        }
        
        if HRSystem.update_personnel(self.member, **updates):
            await interaction.response.send_message(
                f"‚úÖ –î–∞–Ω–Ω—ã–µ {self.member.mention} —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!",
                ephemeral=True
            )
            
            # –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô –í–´–ó–û–í
            await HRSystem.log_action(
                action="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö",
                target=self.member,
                executor=interaction.user,
                old_position=old_data.get("position", ""),
                new_position=self.position.value
            )
        else:
            await interaction.response.send_message(
                "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞!",
                ephemeral=True
            )

class RecruitmentForm(Modal, title='–ó–∞—è–≤–∫–∞ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ'):
    name = TextInput(label='–ò–º—è', placeholder='–ò–≤–∞–Ω', required=True)
    surname = TextInput(label='–§–∞–º–∏–ª–∏—è', placeholder='–ò–≤–∞–Ω–æ–≤', required=True)
    age = TextInput(label='–°—Ç–∞—Ç–∏–∫(6—Ü–∏—Ñ—Ä XXX-XXX)', placeholder='XXX-XXX', required=True)
    experience = TextInput(
        label='–ü–æ—Ä—è–¥–æ–∫ –Ω–∞–±–æ—Ä–∞',
        placeholder='–°–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ',
        required=True
    )

    async def on_submit(self, interaction: discord.Interaction):
        settings = load_settings()
        requests_channel_id = settings["channels"].get("recruitment_requests", REQUESTS_CHANNEL)
        channel = bot.get_channel(requests_channel_id)

        embed = discord.Embed(
            title="üìã –ó–∞—è–≤–∫–∞ –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ —Ä–æ–ª–∏",
            color=discord.Color.blue(),
            timestamp=datetime.datetime.now()
        )
        embed.add_field(name="üë§ –ó–∞—è–≤–∏—Ç–µ–ª—å", value=f"<@{interaction.user.id}>", inline=False)
        embed.add_field(name="üìù –ò–º—è –§–∞–º–∏–ª–∏—è", value=self.name.value + " " + self.surname.value, inline=True)
        embed.add_field(name="üî¢ –°—Ç–∞—Ç–∏–∫", value=self.age.value, inline=True)
        embed.add_field(name="üéñÔ∏è –ó–≤–∞–Ω–∏–µ", value="–†—è–¥–æ–≤–æ–π –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π —Å–ª—É–∂–±—ã", inline=True)
        embed.add_field(name="üìã –ü–æ—Ä—è–¥–æ–∫ –Ω–∞–±–æ—Ä–∞", value=self.experience.value, inline=False)

        if channel:
            view = RecruitmentRequestView()
            await channel.send(embed=embed, view=view)
            await interaction.response.send_message(
                "‚úÖ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ!",
                ephemeral=True
            )
        else:
            await interaction.response.send_message(
                "‚ùå –û—à–∏–±–∫–∞: –∫–∞–Ω–∞–ª –¥–ª—è –∑–∞—è–≤–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω!",
                ephemeral=True
            )

class DismissalButtonView(View):
    def __init__(self):
        super().__init__(timeout=None)
        
        dismissal_button = Button(
            label="–ü–æ–¥–∞—Ç—å —Ä–∞–ø–æ—Ä—Ç –Ω–∞ —É–≤–æ–ª—å–Ω–µ–Ω–∏–µ", 
            style=discord.ButtonStyle.red, 
            emoji="üö™", 
            custom_id="dismissal_main_button"
        )
        self.add_item(dismissal_button)
    
    async def interaction_check(self, interaction: discord.Interaction) -> bool:
        data = HRSystem.get_personnel(interaction.user)
        if not data:
            await interaction.response.send_message(
                "‚ùå –í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–º –§–°–ò–ù!", 
                ephemeral=True
            )
            return False
        return True

class DismissalForm(Modal, title='–†–∞–ø–æ—Ä—Ç –Ω–∞ —É–≤–æ–ª—å–Ω–µ–Ω–∏–µ'):
    reason = TextInput(
        label='–ü—Ä–∏—á–∏–Ω–∞ —É–≤–æ–ª—å–Ω–µ–Ω–∏—è',
        style=discord.TextStyle.paragraph,
        placeholder='–û–ø–∏—à–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –≤–∞—à–µ–≥–æ —É–≤–æ–ª—å–Ω–µ–Ω–∏—è',
        required=True
    )

    async def on_submit(self, interaction: discord.Interaction):
        settings = load_settings()
        dismissal_channel_id = settings["channels"].get("dismissal_requests", DISMISSAL_CHANNEL)
        channel = bot.get_channel(dismissal_channel_id)
        
        embed = discord.Embed(
            title="üö® –†–∞–ø–æ—Ä—Ç –Ω–∞ —É–≤–æ–ª—å–Ω–µ–Ω–∏–µ",
            description=f"## <@{interaction.user.id}> –ø–æ–¥–∞–ª —Ä–∞–ø–æ—Ä—Ç –Ω–∞ —É–≤–æ–ª—å–Ω–µ–Ω–∏–µ!",
            color=discord.Color.red(),
            timestamp=datetime.datetime.now()
        )
        text_before_embed = f"<@{interaction.user.id}>"
        embed.set_thumbnail(url=interaction.user.display_avatar.url)

        with open('personnel_data.json', 'r', encoding='utf-8') as file:
            data = json.load(file)

        user_id = str(interaction.user.id)
        full_name = data["personnel"][user_id]["name"]
        staticc = data["personnel"][user_id]["static"]
        divisionn = data["personnel"][user_id]["division"]
        rankk = data["personnel"][user_id]["rank"]

        embed.add_field(name="–ò–º—è –§–∞–º–∏–ª–∏—è", value=full_name, inline=True)
        embed.add_field(name="–°—Ç–∞—Ç–∏–∫", value=staticc, inline=True)
        embed.add_field(name="–ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ", value=divisionn, inline=True)
        embed.add_field(name="–ó–≤–∞–Ω–∏–µ", value=rankk, inline=True)
        embed.add_field(name="–ü—Ä–∏—á–∏–Ω–∞ —É–≤–æ–ª—å–Ω–µ–Ω–∏—è", value=self.reason.value, inline=False)
        embed.set_footer(text=f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {interaction.user.display_name}")

        if channel:
            view = DismissalRequestView(interaction.user.id)
            await channel.send(content=text_before_embed, embed=embed, view=view)
            await interaction.response.send_message(
                "‚úÖ –í–∞—à —Ä–∞–ø–æ—Ä—Ç –Ω–∞ —É–≤–æ–ª—å–Ω–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!",
                ephemeral=True
            )
        else:
            await interaction.response.send_message(
                "‚ùå –û—à–∏–±–∫–∞: –∫–∞–Ω–∞–ª –¥–ª—è —Ä–∞–ø–æ—Ä—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω!",
                ephemeral=True
            )

# View –∫–ª–∞—Å—Å—ã
class RecruitmentRequestView(View):
    def __init__(self):
        super().__init__(timeout=None)
        
        approve_button = Button(label="–û–¥–æ–±—Ä–∏—Ç—å", style=discord.ButtonStyle.green, emoji="‚úÖ", custom_id="recruitment_approve")
        reject_button = Button(label="–û—Ç–∫–ª–æ–Ω–∏—Ç—å", style=discord.ButtonStyle.red, emoji="‚ùå", custom_id="recruitment_reject")
        
        self.add_item(approve_button)
        self.add_item(reject_button)

    async def interaction_check(self, interaction: discord.Interaction) -> bool:
        return has_recruitment_permissions(interaction.user)

class DismissalRequestView(View):
    def __init__(self, author_id: int = 0):
        super().__init__(timeout=None)
        self.author_id = author_id
        
        approve_button = Button(
            label="–û–¥–æ–±—Ä–∏—Ç—å", 
            style=discord.ButtonStyle.green, 
            emoji="‚úÖ", 
            custom_id="dismissal_approve"
        )
        reject_button = Button(
            label="–û—Ç–∫–ª–æ–Ω–∏—Ç—å", 
            style=discord.ButtonStyle.red, 
            emoji="‚ùå", 
            custom_id="dismissal_reject"
        )
        
        self.add_item(approve_button)
        self.add_item(reject_button)

    async def interaction_check(self, interaction: discord.Interaction) -> bool:
        if self.author_id == 0:
            return has_dismissal_permissions(interaction.user)
        return has_dismissal_permissions(interaction.user) or interaction.user.id == self.author_id

class ConfirmDeleteView(View):
    def __init__(self, author_id: int):
        super().__init__(timeout=None)
        self.author_id = author_id
        
        confirm_button = Button(
            label="–î–∞, —É–¥–∞–ª–∏—Ç—å", 
            style=discord.ButtonStyle.red, 
            emoji="‚ö†Ô∏è", 
            custom_id="confirm_delete"
        )
        cancel_button = Button(
            label="–û—Ç–º–µ–Ω–∞", 
            style=discord.ButtonStyle.gray, 
            custom_id="cancel_delete"
        )
        
        self.add_item(confirm_button)
        self.add_item(cancel_button)

    async def interaction_check(self, interaction: discord.Interaction) -> bool:
        return interaction.user.id == self.author_id or has_dismissal_permissions(interaction.user)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ View
class SettingsView(View):
    def __init__(self):
        super().__init__(timeout=None)
        
        channel_button = Button(label="–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–∞–Ω–∞–ª–æ–≤", style=discord.ButtonStyle.primary, emoji="üìù", custom_id="settings_channels")
        roles_button = Button(label="–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–æ–ª–µ–π", style=discord.ButtonStyle.primary, emoji="üëë", custom_id="settings_roles")
        admins_button = Button(label="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞–º–∏", style=discord.ButtonStyle.success, emoji="‚öôÔ∏è", custom_id="settings_admins")
        moderators_button = Button(label="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º–∏", style=discord.ButtonStyle.success, emoji="üõ†Ô∏è", custom_id="settings_moderators")
        google_button = Button(label="–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Google Sheets", style=discord.ButtonStyle.secondary, emoji="üìä", custom_id="settings_google")
        reload_button = Button(label="–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –±–æ—Ç–∞", style=discord.ButtonStyle.danger, emoji="üîÑ", custom_id="settings_reload")
        
        self.add_item(channel_button)
        self.add_item(roles_button)
        self.add_item(admins_button)
        self.add_item(moderators_button)
        self.add_item(google_button)
        self.add_item(reload_button)

class ChannelSettingsView(View):
    def __init__(self):
        super().__init__(timeout=None)
        
        recruitment_button = Button(label="–ö–∞–Ω–∞–ª –∑–∞—è–≤–æ–∫", style=discord.ButtonStyle.secondary, emoji="üìã", custom_id="channel_recruitment")
        dismissal_button = Button(label="–ö–∞–Ω–∞–ª —Ä–∞–ø–æ—Ä—Ç–æ–≤", style=discord.ButtonStyle.secondary, emoji="üö™", custom_id="channel_dismissal")
        logs_button = Button(label="–ö–∞–Ω–∞–ª –ª–æ–≥–æ–≤", style=discord.ButtonStyle.secondary, emoji="üìä", custom_id="channel_logs")
        status_button = Button(label="–ö–∞–Ω–∞–ª —Å—Ç–∞—Ç—É—Å–æ–≤", style=discord.ButtonStyle.secondary, emoji="üîÑ", custom_id="channel_status")
        back_button = Button(label="–ù–∞–∑–∞–¥", style=discord.ButtonStyle.gray, emoji="‚óÄÔ∏è", custom_id="settings_back")
        
        self.add_item(recruitment_button)
        self.add_item(dismissal_button)
        self.add_item(logs_button)
        self.add_item(status_button)
        self.add_item(back_button)

class RoleSettingsView(View):
    def __init__(self):
        super().__init__(timeout=None)
        
        recruitment_button = Button(label="–†–æ–ª—å –∑–∞—è–≤–æ–∫", style=discord.ButtonStyle.secondary, emoji="üìã", custom_id="role_recruitment")
        hr_button = Button(label="–†–æ–ª—å –∫–∞–¥—Ä–æ–≤", style=discord.ButtonStyle.secondary, emoji="üëî", custom_id="role_hr")
        dismissal_button = Button(label="–†–æ–ª—å —É–≤–æ–ª—å–Ω–µ–Ω–∏–π", style=discord.ButtonStyle.secondary, emoji="üö™", custom_id="role_dismissal")
        back_button = Button(label="–ù–∞–∑–∞–¥", style=discord.ButtonStyle.gray, emoji="‚óÄÔ∏è", custom_id="settings_back")
        
        self.add_item(recruitment_button)
        self.add_item(hr_button)
        self.add_item(dismissal_button)
        self.add_item(back_button)

class AdminManagementView(View):
    def __init__(self):
        super().__init__(timeout=None)
        
        add_admin_button = Button(label="–î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∞", style=discord.ButtonStyle.success, emoji="‚ûï", custom_id="admin_add")
        remove_admin_button = Button(label="–£–¥–∞–ª–∏—Ç—å –∞–¥–º–∏–Ω–∞", style=discord.ButtonStyle.danger, emoji="‚ûñ", custom_id="admin_remove")
        list_admins_button = Button(label="–°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤", style=discord.ButtonStyle.primary, emoji="üìã", custom_id="admin_list")
        back_button = Button(label="–ù–∞–∑–∞–¥", style=discord.ButtonStyle.gray, emoji="‚óÄÔ∏è", custom_id="settings_back")
        
        self.add_item(add_admin_button)
        self.add_item(remove_admin_button)
        self.add_item(list_admins_button)
        self.add_item(back_button)

class ModeratorManagementView(View):
    def __init__(self):
        super().__init__(timeout=None)
        
        add_mod_button = Button(label="–î–æ–±–∞–≤–∏—Ç—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞", style=discord.ButtonStyle.success, emoji="‚ûï", custom_id="mod_add")
        remove_mod_button = Button(label="–£–¥–∞–ª–∏—Ç—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞", style=discord.ButtonStyle.danger, emoji="‚ûñ", custom_id="mod_remove")
        list_mods_button = Button(label="–°–ø–∏—Å–æ–∫ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤", style=discord.ButtonStyle.primary, emoji="üìã", custom_id="mod_list")
        back_button = Button(label="–ù–∞–∑–∞–¥", style=discord.ButtonStyle.gray, emoji="‚óÄÔ∏è", custom_id="settings_back")
        
        self.add_item(add_mod_button)
        self.add_item(remove_mod_button)
        self.add_item(list_mods_button)
        self.add_item(back_button)

class GoogleSettingsView(View):
    def __init__(self):
        super().__init__(timeout=None)
        
        enable_button = Button(label="–í–∫–ª—é—á–∏—Ç—å/–í—ã–∫–ª—é—á–∏—Ç—å", style=discord.ButtonStyle.primary, emoji="‚öôÔ∏è", custom_id="google_toggle")
        setup_button = Button(label="–ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É", style=discord.ButtonStyle.secondary, emoji="üìù", custom_id="google_setup")
        test_button = Button(label="–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è", style=discord.ButtonStyle.success, emoji="‚úÖ", custom_id="google_test")
        back_button = Button(label="–ù–∞–∑–∞–¥", style=discord.ButtonStyle.gray, emoji="‚óÄÔ∏è", custom_id="settings_back")
        
        self.add_item(enable_button)
        self.add_item(setup_button)
        self.add_item(test_button)
        self.add_item(back_button)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–π
async def handle_recruitment_approve(interaction: discord.Interaction):
    try:
        if not has_recruitment_permissions(interaction.user):
            if not interaction.response.is_done():
                await interaction.response.send_message("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –æ–¥–æ–±—Ä–µ–Ω–∏—è –∑–∞—è–≤–æ–∫!", ephemeral=True)
            return

        # –û—Ç–ª–æ–∂–∏—Ç—å –æ—Ç–≤–µ—Ç —Å—Ä–∞–∑—É
        if not interaction.response.is_done():
            await interaction.response.defer(thinking=True, ephemeral=True)

        embed = interaction.message.embeds[0]
        user_id = int(embed.fields[0].value[2:-1])
        member = interaction.guild.get_member(user_id)
        
        if not member:
            await interaction.followup.send("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ!", ephemeral=True)
            return

        full_name = None
        static = None
        reason = None
        
        for field in embed.fields:
            if field.name == "üìù –ò–º—è –§–∞–º–∏–ª–∏—è":
                full_name = field.value
            elif field.name == "üî¢ –°—Ç–∞—Ç–∏–∫":
                static = field.value
            elif field.name == "üìã –ü–æ—Ä—è–¥–æ–∫ –Ω–∞–±–æ—Ä–∞":
                reason = field.value
        
        if not full_name:
            await interaction.followup.send("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ–ª–µ —Å –∏–º–µ–Ω–µ–º –≤ –∑–∞—è–≤–∫–µ!", ephemeral=True)
            return

        try:
            await member.edit(nick=f"–ö—É—Ä—Å–∞–Ω—Ç | {full_name}")
        except discord.Forbidden:
            pass

        HRSystem.add_personnel(member, interaction.user)
        updates = {
            "name": full_name,
            "static": static if static else "",
            "division": "–ê–∫–∞–¥–µ–º–∏—è –§–°–ò–ù"
        }
        HRSystem.update_personnel(member, **updates)

        try:
            roles_to_add = [
                discord.utils.get(interaction.guild.roles, name="========[üîó]–û—Ç–¥–µ–ª[üîó]========"),
                discord.utils.get(interaction.guild.roles, name="–†—è–¥–æ–≤–æ–π –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π —Å–ª—É–∂–±—ã"),
                discord.utils.get(interaction.guild.roles, name="–ê–∫–∞–¥–µ–º–∏—è –§–°–ò–ù"),
                discord.utils.get(interaction.guild.roles, name="========[üìò]–î–æ—Å—Ç—É–ø[üìò]========"),
                discord.utils.get(interaction.guild.roles, name="[¬©Ô∏è] –°–æ—Ç—Ä—É–¥–Ω–∏–∫ –§–°–ò–ù"),
                discord.utils.get(interaction.guild.roles, name="========[üë®üèª‚Äç‚úàÔ∏è]–ó–≤–∞–Ω–∏–µ[üë®üèª‚Äç‚úàÔ∏è]========")
            ]
            
            for role in roles_to_add:
                if role:
                    await member.add_roles(role)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–¥–∞—á–µ —Ä–æ–ª–µ–π: {e}")

        new_embed = embed.copy()
        new_embed.color = discord.Color.green()
        new_embed.add_field(
            name="‚úÖ –°—Ç–∞—Ç—É—Å",
            value=f"–û–¥–æ–±—Ä–µ–Ω–æ –û—Ç–¥–µ–ª–æ–º –ö–∞–¥—Ä–æ–≤ {interaction.user.mention}",
            inline=False
        )

        await interaction.message.edit(embed=new_embed, view=None)

        await HRSystem.log_action(
            action="–ü—Ä–∏–Ω—è—Ç–∏–µ –Ω–∞ —Å–ª—É–∂–±—É",
            target=member,
            executor=interaction.user,
            reason=reason or "–ù–µ —É–∫–∞–∑–∞–Ω–∞",
            new_rank="–†—è–¥–æ–≤–æ–π –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π —Å–ª—É–∂–±—ã"
        )

        try:
            await member.send("üéâ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –±—ã–ª–∞ –æ–¥–æ–±—Ä–µ–Ω–∞! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ä—è–¥—ã –§–°–ò–ù!")
        except discord.Forbidden:
            pass

        # –ò—Å–ø–æ–ª—å–∑—É–µ–º followup –≤–º–µ—Å—Ç–æ response
        await interaction.followup.send("‚úÖ –ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ–¥–æ–±—Ä–µ–Ω–∞!", ephemeral=True)

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ handle_recruitment_approve: {e}")
        try:
            # –ü—ã—Ç–∞–µ–º—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å followup, –µ—Å–ª–∏ response —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω
            await interaction.followup.send(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞—è–≤–∫–∏!",
                ephemeral=True
            )
        except:
            # –ï—Å–ª–∏ –≤—Å—ë –ø—Ä–æ–≤–∞–ª–∏–ª–æ—Å—å, –ø—Ä–æ—Å—Ç–æ –ª–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
            print("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ: –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")

async def handle_recruitment_reject(interaction: discord.Interaction):
    if not has_recruitment_permissions(interaction.user):
        await interaction.response.send_message("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –∑–∞—è–≤–æ–∫!", ephemeral=True)
        return
    
    embed = interaction.message.embeds[0]
    user_id = int(embed.fields[0].value[2:-1])
    member = interaction.guild.get_member(user_id)
    
    embed.color = discord.Color.red()
    embed.add_field(name="–°—Ç–∞—Ç—É—Å", value=f"‚ùå –û—Ç–∫–ª–æ–Ω–µ–Ω–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–æ–º –û–†–õ–° {interaction.user.mention}", inline=True)
    
    await interaction.message.edit(embed=embed, view=None)
    
    settings = load_settings()
    status_channel_id = settings["channels"].get("status", REQUEST_STATUS_CHANNEL)
    status_channel = bot.get_channel(status_channel_id)
    
    if status_channel:
        await status_channel.send(embed=embed)
    
    if member:
        try:
            await member.send("üòî –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –±—ã–ª–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞. –í—ã –º–æ–∂–µ—Ç–µ –ø–æ–¥–∞—Ç—å –Ω–æ–≤—É—é –∑–∞—è–≤–∫—É –ø–æ–∑–∂–µ.")
        except discord.Forbidden:
            pass
    
    await interaction.response.send_message("‚úÖ –ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞!", ephemeral=True)

async def handle_dismissal_approve(interaction: discord.Interaction):
    try:
        if not has_dismissal_permissions(interaction.user):
            if not interaction.response.is_done():
                await interaction.response.send_message("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –æ–¥–æ–±—Ä–µ–Ω–∏—è —Ä–∞–ø–æ—Ä—Ç–æ–≤!", ephemeral=True)
            return
        
        # –û—Ç–ª–æ–∂–∏—Ç—å –æ—Ç–≤–µ—Ç —Å—Ä–∞–∑—É
        if not interaction.response.is_done():
            await interaction.response.defer(thinking=True, ephemeral=True)

        embed = interaction.message.embeds[0]
        user_id = int(embed.description.split()[1][2:-1])
        member = interaction.guild.get_member(user_id)
        
        if not member:
            await interaction.followup.send("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ!", ephemeral=True)
            return
        
        data = HRSystem.get_personnel(member)
        
        reason = None
        for field in embed.fields:
            if field.name == "–ü—Ä–∏—á–∏–Ω–∞ —É–≤–æ–ª—å–Ω–µ–Ω–∏—è":
                reason = field.value
                break
        
        if data:
            full_name = data["name"]
            division = data.get("division", "–ù–µ —É–∫–∞–∑–∞–Ω–æ")
            rank = data.get("rank", "–ù–µ —É–∫–∞–∑–∞–Ω–æ")
            static = data.get("static", "–ù–µ —É–∫–∞–∑–∞–Ω")
            position = data.get("position", "–ù–µ —É–∫–∞–∑–∞–Ω–∞")
            
            roles_to_remove = [role for role in member.roles if role.name != "@everyone"]
            if roles_to_remove:
                await member.remove_roles(*roles_to_remove)
            
            try:
                await member.edit(nick=f"–£–≤–æ–ª–µ–Ω | {full_name}")
            except discord.Forbidden:
                pass
            
            await HRSystem.log_action(
                action="–£–≤–æ–ª—å–Ω–µ–Ω–∏–µ",
                target=member,
                executor=interaction.user,
                reason=reason or "–ù–µ —É–∫–∞–∑–∞–Ω–∞",
                old_rank=rank,
                old_position=position
            )
        else:
            try:
                await member.edit(nick=f"–£–≤–æ–ª–µ–Ω | {member.display_name}")
            except discord.Forbidden:
                pass
            
            await HRSystem.log_action(
                action="–£–≤–æ–ª—å–Ω–µ–Ω–∏–µ (–Ω–µ –±—ã–ª –≤ –±–∞–∑–µ)",
                target=member,
                executor=interaction.user,
                reason=reason or "–ù–µ —É–∫–∞–∑–∞–Ω–∞"
            )
        
        HRSystem.remove_personnel(member)

        new_embed = embed.copy()
        new_embed.color = discord.Color.green()
        new_embed.add_field(
            name="‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ", 
            value=f"–°–æ—Ç—Ä—É–¥–Ω–∏–∫: {interaction.user.mention}\n–í—Ä–µ–º—è: {datetime.datetime.now().strftime('%d.%m.%Y %H:%M')}", 
            inline=True
        )
        
        await interaction.message.edit(embed=new_embed, view=None)
        
        try:
            await member.send("‚ÑπÔ∏è –í–∞—à —Ä–∞–ø–æ—Ä—Ç –Ω–∞ —É–≤–æ–ª—å–Ω–µ–Ω–∏–µ –±—ã–ª –æ–¥–æ–±—Ä–µ–Ω. –°–ø–∞—Å–∏–±–æ –∑–∞ —Å–ª—É–∂–±—É!")
        except discord.Forbidden:
            pass
        
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º followup –≤–º–µ—Å—Ç–æ response, —Ç–∞–∫ –∫–∞–∫ –º—ã —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ defer
        await interaction.followup.send("‚úÖ –†–∞–ø–æ—Ä—Ç –Ω–∞ —É–≤–æ–ª—å–Ω–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ–¥–æ–±—Ä–µ–Ω!", ephemeral=True)

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ handle_dismissal_approve: {e}")
        try:
            # –ü—ã—Ç–∞–µ–º—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å followup, –µ—Å–ª–∏ response —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω
            await interaction.followup.send(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ä–∞–ø–æ—Ä—Ç–∞!",
                ephemeral=True
            )
        except:
            # –ï—Å–ª–∏ –≤—Å—ë –ø—Ä–æ–≤–∞–ª–∏–ª–æ—Å—å, –ø—Ä–æ—Å—Ç–æ –ª–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
            print("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ: –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")

async def handle_dismissal_reject(interaction: discord.Interaction):
    if not has_dismissal_permissions(interaction.user):
        await interaction.response.send_message("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è —Ä–∞–ø–æ—Ä—Ç–æ–≤!", ephemeral=True)
        return
    
    embed = interaction.message.embeds[0]
    user_id = int(embed.description.split()[1][2:-1])
    member = interaction.guild.get_member(user_id)
    
    embed.color = discord.Color.red()
    embed.add_field(name="‚ùå–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ", value=f"–°–æ—Ç—Ä—É–¥–Ω–∏–∫: {interaction.user.mention}\n–í—Ä–µ–º—è: {datetime.datetime.now().strftime('%d.%m.%Y %H:%M')}", inline=True)
    
    await interaction.message.edit(embed=embed, view=None)
    
    if member:
        try:
            await member.send("‚ÑπÔ∏è –í–∞—à —Ä–∞–ø–æ—Ä—Ç –Ω–∞ —É–≤–æ–ª—å–Ω–µ–Ω–∏–µ –±—ã–ª –æ—Ç–∫–ª–æ–Ω–µ–Ω. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∫–æ–º–∞–Ω–¥–æ–≤–∞–Ω–∏—é –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π.")
        except discord.Forbidden:
            pass
    
    await interaction.response.send_message("‚úÖ –†–∞–ø–æ—Ä—Ç –Ω–∞ —É–≤–æ–ª—å–Ω–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–∫–ª–æ–Ω–µ–Ω!", ephemeral=True)

async def handle_dismissal_delete(interaction: discord.Interaction):
    try:
        embed = interaction.message.embeds[0]
        description = embed.description
        match = re.search(r'<@(\d+)>', description)
        
        if not match:
            await interaction.response.send_message(
                "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∞–≤—Ç–æ—Ä–∞ —Ä–∞–ø–æ—Ä—Ç–∞!",
                ephemeral=True
            )
            return
            
        author_id = int(match.group(1))
        
        if interaction.user.id != author_id and not has_dismissal_permissions(interaction.user):
            await interaction.response.send_message(
                "‚ùå –í—ã –º–æ–∂–µ—Ç–µ —É–¥–∞–ª—è—Ç—å —Ç–æ–ª—å–∫–æ —Å–≤–æ–∏ —Ä–∞–ø–æ—Ä—Ç—ã!",
                ephemeral=True
            )
            return
        
        confirm_embed = discord.Embed(
            title="‚ö†Ô∏è –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —É–¥–∞–ª–µ–Ω–∏–µ",
            description=f"–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç —Ä–∞–ø–æ—Ä—Ç?",
            color=discord.Color.orange()
        )
        
        view = ConfirmDeleteView(author_id)
        await interaction.response.send_message(embed=confirm_embed, view=view, ephemeral=True)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —É–¥–∞–ª–µ–Ω–∏—è: {e}")
        await interaction.response.send_message(
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞!",
            ephemeral=True
        )

async def handle_confirm_delete(interaction: discord.Interaction, user_id: int):
    try:
        original_message = None
        async for message in interaction.channel.history(limit=100):
            if message.embeds and message.embeds[0].description:
                description = message.embeds[0].description
                user_mention = re.search(r'<@(\d+)>', description)
                if user_mention and int(user_mention.group(1)) == user_id:
                    original_message = message
                    break
        
        if original_message:
            await original_message.delete()
            if not interaction.response.is_done():
                await interaction.response.send_message(
                    f"‚úÖ –†–∞–ø–æ—Ä—Ç –Ω–∞ —É–≤–æ–ª—å–Ω–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <@{user_id}> –±—ã–ª —É–¥–∞–ª–µ–Ω.",
                    ephemeral=True
                )
        else:
            if not interaction.response.is_done():
                await interaction.response.send_message(
                    "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∏—Å—Ö–æ–¥–Ω—ã–π —Ä–∞–ø–æ—Ä—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è!",
                    ephemeral=True
                )
        
        try:
            await interaction.message.delete()
        except discord.NotFound:
            pass

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ä–∞–ø–æ—Ä—Ç–∞: {e}")
        if not interaction.response.is_done():
            await interaction.response.send_message(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ä–∞–ø–æ—Ä—Ç–∞!",
                ephemeral=True
            )


@bot.tree.command(name="–ø—Ä–æ–≤–µ—Ä–∏—Ç—å_–≥—É–≥–ª", description="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Google Sheets")
async def check_google(interaction: discord.Interaction):
    if not is_bot_admin(interaction.user):
        await interaction.response.send_message("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!", ephemeral=True)
        return
    
    if not os.path.exists(GOOGLE_CREDS_FILE):
        await interaction.response.send_message("‚ùå –§–∞–π–ª google_credentials.json –Ω–µ –Ω–∞–π–¥–µ–Ω!", ephemeral=True)
        return
    
    if google_sheets.initialize():
        settings = load_settings()
        spreadsheet_id = settings["google_sheets"].get("spreadsheet_id")
        
        if spreadsheet_id:
            try:
                success = google_sheets.setup_spreadsheet(spreadsheet_id)
                if success:
                    await interaction.response.send_message("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Google Sheets —É—Å–ø–µ—à–Ω–æ!", ephemeral=True)
                else:
                    await interaction.response.send_message("‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ç–∞–±–ª–∏—Ü–µ! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ ID –∏ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞.", ephemeral=True)
            except Exception as e:
                await interaction.response.send_message(f"‚ùå –û—à–∏–±–∫–∞: {e}", ephemeral=True)
        else:
            await interaction.response.send_message("‚ùå ID —Ç–∞–±–ª–∏—Ü—ã –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!", ephemeral=True)
    else:
        await interaction.response.send_message("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Google API!", ephemeral=True)


# –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞
@bot.tree.command(name="–Ω–∞—Å—Ç—Ä–æ–π–∫–∏", description="–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –±–æ—Ç–∞")
async def settings_command(interaction: discord.Interaction):
    if not is_bot_admin(interaction.user):
        await interaction.response.send_message("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!", ephemeral=True)
        return
    
    embed = discord.Embed(
        title="‚öôÔ∏è –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–æ–º",
        description="–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:",
        color=discord.Color.blue()
    )
    
    embed.add_field(
        name="üìù –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–∞–Ω–∞–ª–æ–≤",
        value="–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–∞–Ω–∞–ª–æ–≤ –¥–ª—è –∑–∞—è–≤–æ–∫, –ª–æ–≥–æ–≤ –∏ —Å—Ç–∞—Ç—É—Å–æ–≤",
        inline=False
    )
    
    embed.add_field(
        name="üëë –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–æ–ª–µ–π",
        value="–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–æ–ª–µ–π –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Ä–∞–∑–ª–∏—á–Ω—ã–º —Ñ—É–Ω–∫—Ü–∏—è–º",
        inline=False
    )
    
    embed.add_field(
        name="‚öôÔ∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞–º–∏",
        value="–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏ —É–¥–∞–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –±–æ—Ç–∞",
        inline=False
    )
    
    embed.add_field(
        name="üõ†Ô∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º–∏",
        value="–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏ —É–¥–∞–ª–µ–Ω–∏–µ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤ –±–æ—Ç–∞",
        inline=False
    )
    
    embed.add_field(
        name="üìä –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Google Sheets",
        value="–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Google –¢–∞–±–ª–∏—Ü–∞–º–∏ –¥–ª—è –∫–∞–¥—Ä–æ–≤–æ–≥–æ –∞—É–¥–∏—Ç–∞",
        inline=False
    )
    
    embed.add_field(
        name="üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞",
        value="–ì–æ—Ä—è—á–∞—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –±–æ—Ç–∞",
        inline=False
    )
    
    view = SettingsView()
    await interaction.response.send_message(embed=embed, view=view, ephemeral=True)

@bot.tree.command(name="–≤—ã–∑–≤–∞—Ç—å_–¥–µ–π—Å—Ç–≤–∏–µ", description="–í—ã–∑–≤–∞—Ç—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)")
@app_commands.describe(–¥–µ–π—Å—Ç–≤–∏–µ="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –¥–ª—è –≤—ã–∑–æ–≤–∞")
@app_commands.choices(–¥–µ–π—Å—Ç–≤–∏–µ=[
    app_commands.Choice(name="–ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–æ–ª–∏", value="role"),
    app_commands.Choice(name="–†–∞–ø–æ—Ä—Ç –Ω–∞ —É–≤–æ–ª—å–Ω–µ–Ω–∏–µ", value="dismissal"),
    app_commands.Choice(name="–ó–∞–ø—Ä–æ—Å —Å–∫–ª–∞–¥–∞", value="warehouse"),
    app_commands.Choice(name="–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞", value="moderator_registration")  # –ù–æ–≤–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ
])
async def call_action(interaction: discord.Interaction, –¥–µ–π—Å—Ç–≤–∏–µ: app_commands.Choice[str]):
    if not is_bot_admin(interaction.user):
        await interaction.response.send_message("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!", ephemeral=True)
        return
    
    await interaction.response.send_message("‚úÖ –î–µ–π—Å—Ç–≤–∏–µ —É—Å–ø–µ—à–Ω–æ –≤—ã–∑–≤–∞–Ω–æ!", ephemeral=True)
    
    if –¥–µ–π—Å—Ç–≤–∏–µ.value == "role":
        recruitment_embed = discord.Embed(
            title="üéñÔ∏è –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–æ–ª–µ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ",
            description="–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö —Ä–æ–ª–µ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –≤—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –≤–∞—Ä–∏–∞–Ω—Ç –Ω–∏–∂–µ.\n"
            "### üìã –í–∞–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:\n"
            "> ‚Ä¢ –û–¥–Ω–∞ –∑–∞—è–≤–∫–∞ - –ø–æ–¥–∞–≤–∞–π—Ç–µ —Ç–æ–ª—å–∫–æ –æ–¥–Ω—É –∑–∞—è–≤–∫—É –∑–∞ —Ä–∞–∑\n"
            "> ‚Ä¢ –î–æ—Å—Ç–æ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ - —É–∫–∞–∑—ã–≤–∞–π—Ç–µ —Ç–æ–ª—å–∫–æ –ø—Ä–∞–≤–¥–∏–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é\n"
            "> ‚Ä¢ –î–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ - –ø—Ä–∏–ª–æ–∂–∏—Ç–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é—â–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã (–µ—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è)\n"
            "> ‚Ä¢ –¢–µ—Ä–ø–µ–Ω–∏–µ - –¥–æ–∂–¥–∏—Ç–µ—Å—å —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—è (—É –Ω–∞—Å –µ—Å—Ç—å 24 —á–∞—Å–æ–≤)\n"
            " \n"
            "## ‚è∞ –í—Ä–µ–º—è —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—è: –æ–±—ã—á–Ω–æ –¥–æ 24 —á–∞—Å–æ–≤\n",
            color=0x69ED69
        )
        recruitment_embed.add_field(
            name="–°–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ",
            value="> ‚Ä¢ –£—á–∞—Å—Ç–≤—É–µ—Ç–µ –≤ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–∏\n",
            inline=True
        )
        recruitment_embed.set_footer(text="–ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è –ø–æ–¥–∞—á–∞ –∑–∞—è–≤–∫–∏")
        
        recruitment_view = RecruitmentButtonView()
        await interaction.channel.send(embed=recruitment_embed, view=recruitment_view)
    
    elif –¥–µ–π—Å—Ç–≤–∏–µ.value == "dismissal":
        dismissal_embed = discord.Embed(
            title="–†–∞–ø–æ—Ä—Ç—ã –Ω–∞ —É–≤–æ–ª—å–Ω–µ–Ω–∏–µ",
            description="–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–∞–ø–æ—Ä—Ç –Ω–∞ —É–≤–æ–ª—å–Ω–µ–Ω–∏–µ.",
            color=0x0000ff
        )
        dismissal_embed.add_field(
            name="–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è",
            value="1. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –æ—Ç–∫—Ä—ã–≤—à—É—é—Å—è —Ñ–æ—Ä–º—É\n2. –ù–∞–∂–º–∏—Ç–µ '–û—Ç–ø—Ä–∞–≤–∏—Ç—å'\n3. –í–∞—à —Ä–∞–ø–æ—Ä—Ç –±—É–¥–µ—Ç —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å—Å—è –≤ —Ç–µ—á–µ–Ω–∏–∏ __24 —á–∞—Å–æ–≤__.",
            inline=False
        )
        
        dismissal_view = DismissalButtonView()
        await interaction.channel.send(embed=dismissal_embed, view=dismissal_view)
    
    elif –¥–µ–π—Å—Ç–≤–∏–µ.value == "warehouse":
        embed = await create_warehouse_embed()
        view = WarehouseMainView()
        await interaction.channel.send(embed=embed, view=view)

    elif –¥–µ–π—Å—Ç–≤–∏–µ.value == "moderator_registration":
        embed = discord.Embed(
            title="üìã –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –∫–∞–¥—Ä–æ–≤–æ–≥–æ –∞—É–¥–∏—Ç–∞",
            description="–î–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –∫–∞–¥—Ä–æ–≤–æ–≥–æ –∞—É–¥–∏—Ç–∞ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É.",
            color=discord.Color.blue()
        )
        embed.add_field(
            name="–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è",
            value="‚Ä¢ –î–µ–π—Å—Ç–≤—É—é—â–∏–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ –§–°–ò–ù\n‚Ä¢ –ù–∞–ª–∏—á–∏–µ –¥–æ—Å—Ç—É–ø–∞ –∫ Google –∞–∫–∫–∞—É–Ω—Ç—É\n‚Ä¢ –û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∏ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å",
            inline=False
        )
        embed.set_footer(text="–î–æ—Å—Ç—É–ø –∫ —Ç–∞–±–ª–∏—Ü–µ –±—É–¥–µ—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤")
        
        view = ModeratorRegistrationView()
        await interaction.channel.send(embed=embed, view=view)
        
# –û—Å—Ç–∞–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π (—ác, –∫–∞–¥—Ä–æ–≤—ã–π, –ª–∏—á–Ω–æ–µ_–¥–µ–ª–æ, —Å–æ—Å—Ç–∞–≤, —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å_—Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞, setup, –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å)
@bot.tree.command(name="—ác", description="–î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫")
@app_commands.describe(
    –∏–º—è_—Ñ–∞–º–∏–ª–∏—è="–ò–º—è –∏ —Ñ–∞–º–∏–ª–∏—è –Ω–∞—Ä—É—à–∏—Ç–µ–ª—è",
    —Å—Ç–∞—Ç–∏–∫="–°—Ç–∞—Ç–∏–∫ –Ω–∞—Ä—É—à–∏—Ç–µ–ª—è (—Ñ–æ—Ä–º–∞—Ç XXX-XXX)",
    –ø—Ä–∏—á–∏–Ω–∞="–ü—Ä–∏—á–∏–Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫",
    –¥–∞—Ç–∞_–Ω–∞—á–∞–ª–∞="–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ (–î–î.–ú–ú.–ì–ì–ì–ì)",
    –¥–∞—Ç–∞_–æ–∫–æ–Ω—á–∞–Ω–∏—è="–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è (–î–î.–ú–ú.–ì–ì–ì–ì)",
    –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞="–°—Å—ã–ª–∫–∞ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞–º–∏"
)
async def blacklist(
    interaction: discord.Interaction,
    –∏–º—è_—Ñ–∞–º–∏–ª–∏—è: str,
    —Å—Ç–∞—Ç–∏–∫: str,
    –ø—Ä–∏—á–∏–Ω–∞: str,
    –¥–∞—Ç–∞_–Ω–∞—á–∞–ª–∞: str,
    –¥–∞—Ç–∞_–æ–∫–æ–Ω—á–∞–Ω–∏—è: str,
    –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞: str
):
    if not has_hr_permissions(interaction.user):
        await interaction.response.send_message("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!", ephemeral=True)
        return
    
    if not re.match(r'^\d{3}-\d{3}$', —Å—Ç–∞—Ç–∏–∫):
        await interaction.response.send_message(
            "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Å—Ç–∞—Ç–∏–∫–∞! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç XXX-XXX",
            ephemeral=True
        )
        return
    
    date_pattern = r'^\d{2}\.\d{2}\.\d{4}$'
    if not re.match(date_pattern, –¥–∞—Ç–∞_–Ω–∞—á–∞–ª–∞) or not re.match(date_pattern, –¥–∞—Ç–∞_–æ–∫–æ–Ω—á–∞–Ω–∏—è):
        await interaction.response.send_message(
            "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç –î–î.–ú–ú.–ì–ì–ì–ì",
            ephemeral=True
        )
        return
    
    executor_data = HRSystem.get_personnel(interaction.user) or {}
    executor_name = executor_data.get("name", interaction.user.display_name)
    executor_static = executor_data.get("static", "–ù–µ —É–∫–∞–∑–∞–Ω")
    
    embed = discord.Embed(
        title="üìã –ù–æ–≤–æ–µ –¥–µ–ª–æ",
        color=discord.Color.dark_red(),
    )
    
    embed.set_thumbnail(url="https://cdn.discordapp.com/attachments/1407347004400472176/1419651572622823514/Gerb_FSIN.png?ex=68d2890e&is=68d1378e&hm=0bc74b74ae48c0f732d5a4af3610c3de78d1afddf7da41fb25f8f604f982bbb5&")
    
    embed.add_field(
        name="1. –ö—Ç–æ –≤—ã–¥–∞—ë—Ç",
        value=f"{executor_name} | {executor_static}",
        inline=False
    )
    embed.add_field(
        name="2. –ö–æ–º—É",
        value=f"{–∏–º—è_—Ñ–∞–º–∏–ª–∏—è} | {—Å—Ç–∞—Ç–∏–∫}",
        inline=False
    )
    embed.add_field(
        name="3. –ü—Ä–∏—á–∏–Ω–∞",
        value=–ø—Ä–∏—á–∏–Ω–∞,
        inline=False
    )
    embed.add_field(
        name="4. –î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞",
        value=–¥–∞—Ç–∞_–Ω–∞—á–∞–ª–∞,
        inline=True
    )
    embed.add_field(
        name="5. –î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è",
        value=–¥–∞—Ç–∞_–æ–∫–æ–Ω—á–∞–Ω–∏—è,
        inline=True
    )
    embed.add_field(
        name="6. –î–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞",
        value=f"{–¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞}",
        inline=False
    )
    
    embed.set_footer(text=f"{datetime.datetime.now().strftime('%d.%m.%Y %H:%M')}")
    
    role_mentions = "<@&1245655012760092705> <@&1335657685940572253> <@&1246113710255374336>"
    
    try:
        await interaction.response.send_message(content=role_mentions, embed=embed)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        await interaction.response.send_message(
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –¥–µ–ª–∞!",
            ephemeral=True
        )

@bot.tree.command(name="–∫–∞–¥—Ä–æ–≤—ã–π", description="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞–¥—Ä–æ–≤—ã–º–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏")
@app_commands.describe(
    –¥–µ–π—Å—Ç–≤–∏–µ="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ",
    —Å–æ—Ç—Ä—É–¥–Ω–∏–∫="–£—á–∞—Å—Ç–Ω–∏–∫ —Å–µ—Ä–≤–µ—Ä–∞",
    –∏–º—è_—Ñ–∞–º–∏–ª–∏—è="–ò–º—è –∏ —Ñ–∞–º–∏–ª–∏—è –±–æ–π—Ü–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è –ø—Ä–∏–Ω—è—Ç–∏—è)",
    —Å—Ç–∞—Ç–∏–∫="–°—Ç–∞—Ç–∏–∫ –±–æ–π—Ü–∞ (6 —Ü–∏—Ñ—Ä, —Ñ–æ—Ä–º–∞—Ç XXX-XXX, —Ç–æ–ª—å–∫–æ –¥–ª—è –ø—Ä–∏–Ω—è—Ç–∏—è)",
    –ø—Ä–∏—á–∏–Ω–∞="–ü—Ä–∏—á–∏–Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏ÔøΩÔøΩ (–¥–ª—è –ø—Ä–∏–Ω—è—Ç–∏—è/—É–≤–æ–ª—å–Ω–µ–Ω–∏—è)",
    –∑–≤–∞–Ω–∏–µ="–í—ã–±–µ—Ä–∏—Ç–µ –∑–≤–∞–Ω–∏–µ (–¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è/–ø–æ–Ω–∏–∂–µ–Ω–∏—è)",
    –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ="–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ (–¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞)",
    –¥–æ–ª–∂–Ω–æ—Å—Ç—å="–í—ã–±–µ—Ä–∏—Ç–µ –¥–æ–ª–∂–Ω–æ—Å—Ç—å (–¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è)"
)
@app_commands.choices(–¥–µ–π—Å—Ç–≤–∏–µ=[
    app_commands.Choice(name="–ü—Ä–∏–Ω—è—Ç", value="hired"),
    app_commands.Choice(name="–ü–æ–≤—ã—à–µ–Ω", value="promoted"),
    app_commands.Choice(name="–ü–æ–Ω–∏–∂–µ–Ω", value="demoted"),
    app_commands.Choice(name="–£–≤–æ–ª–µ–Ω", value="fired"),
    app_commands.Choice(name="–ü–µ—Ä–µ–≤–µ–¥–µ–Ω", value="transferred"),
    app_commands.Choice(name="–ù–∞–∑–Ω–∞—á–∏—Ç—å –¥–æ–ª–∂–Ω–æ—Å—Ç—å", value="position")
])
@app_commands.choices(–∑–≤–∞–Ω–∏–µ=[
    app_commands.Choice(name=rank, value=rank) for rank in RANK_HIERARCHY
])
@app_commands.choices(–ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ=[
    app_commands.Choice(name=div, value=div) for div in DIVISIONS
])
@app_commands.choices(–¥–æ–ª–∂–Ω–æ—Å—Ç—å=[
    app_commands.Choice(name=pos, value=pos) for pos in POSITIONS
])
async def hr_command(
    interaction: discord.Interaction,
    –¥–µ–π—Å—Ç–≤–∏–µ: app_commands.Choice[str],
    —Å–æ—Ç—Ä—É–¥–Ω–∏–∫: discord.Member,
    –∏–º—è_—Ñ–∞–º–∏–ª–∏—è: Optional[str] = None,
    —Å—Ç–∞—Ç–∏–∫: Optional[str] = None,
    –ø—Ä–∏—á–∏–Ω–∞: Optional[str] = None,
    –∑–≤–∞–Ω–∏–µ: Optional[app_commands.Choice[str]] = None,
    –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ: Optional[app_commands.Choice[str]] = None,
    –¥–æ–ª–∂–Ω–æ—Å—Ç—å: Optional[app_commands.Choice[str]] = None
):
    if not has_hr_permissions(interaction.user):
        await interaction.response.send_message("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!", ephemeral=True)
        return
    
    action = –¥–µ–π—Å—Ç–≤–∏–µ.value
    
    if action == "hired":
        if not –∏–º—è_—Ñ–∞–º–∏–ª–∏—è:
            await interaction.response.send_message(
                "‚ùå –î–ª—è –ø—Ä–∏–Ω—è—Ç–∏—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –µ–≥–æ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é!",
                ephemeral=True
            )
            return
        if not —Å—Ç–∞—Ç–∏–∫:
            await interaction.response.send_message(
                "‚ùå –î–ª—è –ø—Ä–∏–Ω—è—Ç–∏—è –±–æ–π—Ü–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –µ–≥–æ —Å—Ç–∞—Ç–∏–∫ (6 —Ü–∏—Ñ—Ä, —Ñ–æ—Ä–º–∞—Ç XXX-XXX)!",
                ephemeral=True
            )
            return
        if not re.match(r'^\d{3}-\d{3}$', —Å—Ç–∞—Ç–∏–∫):
            await interaction.response.send_message(
                "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Å—Ç–∞—Ç–∏–∫–∞! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ 6 —Ü–∏—Ñ—Ä –≤ —Ñ–æ—Ä–º–∞—Ç–µ XXX-XXX",
                ephemeral=True
            )
            return

    if action == "position":
        if not –¥–æ–ª–∂–Ω–æ—Å—Ç—å:
            await interaction.response.send_message("‚ùå –£–∫–∞–∂–∏—Ç–µ –¥–æ–ª–∂–Ω–æ—Å—Ç—å!", ephemeral=True)
            return
        
        if not –∑–≤–∞–Ω–∏–µ:
            await interaction.response.send_message("‚ùå –£–∫–∞–∂–∏—Ç–µ –∑–≤–∞–Ω–∏–µ –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –Ω–∞ –¥–æ–ª–∂–Ω–æ—Å—Ç—å!", ephemeral=True)
            return
            
        position = –¥–æ–ª–∂–Ω–æ—Å—Ç—å.value
        new_rank = –∑–≤–∞–Ω–∏–µ.value
        
        HRSystem.update_personnel(—Å–æ—Ç—Ä—É–¥–Ω–∏–∫, position=position, rank=new_rank)
        
        # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —Ä–æ–ª–µ–π
        for role in —Å–æ—Ç—Ä—É–¥–Ω–∏–∫.roles:
            if role.name in RANK_HIERARCHY:
                await —Å–æ—Ç—Ä—É–¥–Ω–∏–∫.remove_roles(role)
        
        new_role = discord.utils.get(interaction.guild.roles, name=new_rank)
        if new_role:
            await —Å–æ—Ç—Ä—É–¥–Ω–∏–∫.add_roles(new_role)
        
        data = HRSystem.get_personnel(—Å–æ—Ç—Ä—É–¥–Ω–∏–∫)
        full_name = data["name"] if data else —Å–æ—Ç—Ä—É–¥–Ω–∏–∫.display_name
        division = data["division"] if data else "–ê–∫–∞–¥–µ–º–∏—è –§–°–ò–ù"
        
        try:
            await —Å–æ—Ç—Ä—É–¥–Ω–∏–∫.edit(nick=f"{division} | {full_name}")
        except discord.Forbidden:
            pass
        
        await HRSystem.log_action(
            action="–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞ –¥–æ–ª–∂–Ω–æ—Å—Ç—å",
            target=—Å–æ—Ç—Ä—É–¥–Ω–∏–∫,
            executor=interaction.user,
            reason=–ø—Ä–∏—á–∏–Ω–∞ or "–ù–µ —É–∫–∞–∑–∞–Ω–∞"
        )
        
        await interaction.response.send_message(
            f"‚úÖ {—Å–æ—Ç—Ä—É–¥–Ω–∏–∫.mention} –Ω–∞–∑–Ω–∞—á–µ–Ω –Ω–∞ –¥–æ–ª–∂–Ω–æ—Å—Ç—å: {position} —Å –∑–≤–∞–Ω–∏–µ–º {new_rank}!",
            ephemeral=True
        )
        return
    
    elif action == "transferred":
        if not –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ:
            await interaction.response.send_message("‚ùå –£–∫–∞–∂–∏—Ç–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ!", ephemeral=True)
            return
            
        division = –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ.value
        HRSystem.update_personnel(—Å–æ—Ç—Ä—É–¥–Ω–∏–∫, division=division)
        
        data = HRSystem.get_personnel(—Å–æ—Ç—Ä—É–¥–Ω–∏–∫)
        full_name = data["name"] if data else —Å–æ—Ç—Ä—É–¥–Ω–∏–∫.display_name

        # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —Ä–æ–ª–µ–π –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–π
        for role in —Å–æ—Ç—Ä—É–¥–Ω–∏–∫.roles:
            if role.name in DIVISIONS:
                await —Å–æ—Ç—Ä—É–¥–Ω–∏–∫.remove_roles(role)
        
        new_div_role = discord.utils.get(interaction.guild.roles, name=division)
        if new_div_role:
            await —Å–æ—Ç—Ä—É–¥–Ω–∏–∫.add_roles(new_div_role)
        
        try:
            await —Å–æ—Ç—Ä—É–¥–Ω–∏–∫.edit(nick=f"{division} | {full_name}")
        except discord.Forbidden:
            pass
        
        await HRSystem.log_action(
            action="–ü–µ—Ä–µ–≤–æ–¥ –≤ –¥—Ä—É–≥–æ–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ",
            target=—Å–æ—Ç—Ä—É–¥–Ω–∏–∫,
            executor=interaction.user,
            old_division=old_division,  # –ï—Å–ª–∏ –µ—Å—Ç—å —Å—Ç–∞—Ä–æ–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ
            new_division=division,      # –ù–æ–≤–æ–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ
            reason=–ø—Ä–∏—á–∏–Ω–∞ or "–ù–µ —É–∫–∞–∑–∞–Ω–∞"
        )
        
        await interaction.response.send_message(
            f"‚úÖ {—Å–æ—Ç—Ä—É–¥–Ω–∏–∫.mention} –ø–µ—Ä–µ–≤–µ–¥–µ–Ω –≤ {division}!",
            ephemeral=True
        )
        return
    
    elif action in ["promoted", "demoted"]:
        if not –∑–≤–∞–Ω–∏–µ:
            await interaction.response.send_message("‚ùå –£–∫–∞–∂–∏—Ç–µ –∑–≤–∞–Ω–∏–µ!", ephemeral=True)
            return
            
        new_rank = –∑–≤–∞–Ω–∏–µ.value
        
        personnel_data = HRSystem.get_personnel(—Å–æ—Ç—Ä—É–¥–Ω–∏–∫)
        if not personnel_data:
            await interaction.response.send_message("‚ùå –°–æ—Ç—Ä—É–¥–Ω–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö!", ephemeral=True)
            return
            
        current_rank = personnel_data.get("rank", "–†—è–¥–æ–≤–æ–π")
        
        try:
            current_index = RANK_HIERARCHY.index(current_rank)
            new_index = RANK_HIERARCHY.index(new_rank)
        except ValueError:
            await interaction.response.send_message("‚ùå –û—à–∏–±–∫–∞ –≤ –∏–µ—Ä–∞—Ä—Ö–∏–∏ –∑–≤–∞–Ω–∏–π!", ephemeral=True)
            return
        
        if action == "promoted":
            if new_index <= current_index:
                await interaction.response.send_message(
                    f"‚ùå –ù–æ–≤–æ–µ –∑–≤–∞–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤—ã—à–µ —Ç–µ–∫—É—â–µ–≥–æ ({current_rank})!",
                    ephemeral=True
                )
                return
        elif action == "demoted":
            if new_index >= current_index:
                await interaction.response.send_message(
                    f"‚ùå –ù–æ–≤–æ–µ –∑–≤–∞–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –Ω–∏–∂–µ —Ç–µ–∫—É—â–µ–≥–æ ({current_rank})!",
                    ephemeral=True
                )
                return
        
        # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —Ä–æ–ª–µ–π
        for role in —Å–æ—Ç—Ä—É–¥–Ω–∏–∫.roles:
            if role.name in RANK_HIERARCHY:
                await —Å–æ—Ç—Ä—É–¥–Ω–∏–∫.remove_roles(role)
        
        new_role = discord.utils.get(interaction.guild.roles, name=new_rank)
        if new_role:
            await —Å–æ—Ç—Ä—É–¥–Ω–∏–∫.add_roles(new_role)
        
        HRSystem.update_personnel(—Å–æ—Ç—Ä—É–¥–Ω–∏–∫, rank=new_rank)
        
        data = HRSystem.get_personnel(—Å–æ—Ç—Ä—É–¥–Ω–∏–∫)
        full_name = data["name"] if data else —Å–æ—Ç—Ä—É–¥–Ω–∏–∫.display_name
        division = data["division"] if data else "–ê–∫–∞–¥–µ–º–∏—è –§–°–ò–ù"
        
        try:
            await —Å–æ—Ç—Ä—É–¥–Ω–∏–∫.edit(nick=f"{division} | {full_name}")
        except discord.Forbidden:
            pass
        
        await HRSystem.log_action(
            action=f"{'–ü–æ–≤—ã—à–µ–Ω–∏–µ' if action == 'promoted' else '–ü–æ–Ω–∏–∂–µ–Ω–∏–µ'} –≤ –∑–≤–∞–Ω–∏–∏",
            target=—Å–æ—Ç—Ä—É–¥–Ω–∏–∫,
            executor=interaction.user,
            old_rank=current_rank,
            new_rank=new_rank,
            reason=–ø—Ä–∏—á–∏–Ω–∞ or "–ù–µ —É–∫–∞–∑–∞–Ω–∞"
        )
        
        await interaction.response.send_message(
            f"‚úÖ {—Å–æ—Ç—Ä—É–¥–Ω–∏–∫.mention} {'–ø–æ–≤—ã—à–µ–Ω' if action == 'promoted' else '–ø–æ–Ω–∏–∂–µ–Ω'} –¥–æ {new_rank}!",
            ephemeral=True
        )
        return
    
    await process_hr_action(interaction, action, —Å–æ—Ç—Ä—É–¥–Ω–∏–∫, –∏–º—è_—Ñ–∞–º–∏–ª–∏—è, –ø—Ä–∏—á–∏–Ω–∞, —Å—Ç–∞—Ç–∏–∫)

async def process_hr_action(
    interaction: discord.Interaction, 
    action: str, 
    member: discord.Member,
    full_name: str = None,
    reason: str = None,
    static: str = None
):
    executor = interaction.user
    
    try:
        if action == "hired":
            if not reason:
                await interaction.response.send_message("‚ùå –£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –ø—Ä–∏–Ω—è—Ç–∏—è!", ephemeral=True)
                return
            
            if not full_name:
                await interaction.response.send_message("‚ùå –£–∫–∞–∂–∏—Ç–µ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞!", ephemeral=True)
                return
            
            full_name = ' '.join(full_name.split())
            
            try:
                roles_to_add = [
                    discord.utils.get(interaction.guild.roles, name="========[üîó]–û—Ç–¥–µ–ª[üîó]========"),
                    discord.utils.get(interaction.guild.roles, name="–†—è–¥–æ–≤–æ–π –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π —Å–ª—É–∂–±—ã"),
                    discord.utils.get(interaction.guild.roles, name="–ê–∫–∞–¥–µ–º–∏—è –§–°–ò–ù"),
                    discord.utils.get(interaction.guild.roles, name="========[üìò]–î–æ—Å—Ç—É–ø[üìò]========"),
                    discord.utils.get(interaction.guild.roles, name="[¬©Ô∏è] –°–æ—Ç—Ä—É–¥–Ω–∏–∫ –§–°–ò–ù"),
                    discord.utils.get(interaction.guild.roles, name="========[üë®üèª‚Äç‚úàÔ∏è]–ó–≤–∞–Ω–∏–µ[üë®üèª‚Äç‚úàÔ∏è]========")
                ]
                
                for role in roles_to_add:
                    if role:
                        await member.add_roles(role)
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–¥–∞—á–µ —Ä–æ–ª–µ–π: {e}")
            
            try:
                await member.edit(nick=f"–ö—É—Ä—Å–∞–Ω—Ç | {full_name}")
            except discord.Forbidden:
                pass
            
            HRSystem.add_personnel(member, interaction.user)
            updates = {
                "name": full_name,
                "static": static if static else "XXX-XXX",
                "division": "–ê–∫–∞–¥–µ–º–∏—è –§–°–ò–ù"
            }
            HRSystem.update_personnel(member, **updates)
            
            # –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô –í–´–ó–û–í
            await HRSystem.log_action(
                action="–ü—Ä–∏–Ω—è—Ç–∏–µ –Ω–∞ —Å–ª—É–∂–±—É",
                target=member,
                executor=executor,
                reason=reason,
                new_rank="–†—è–¥–æ–≤–æ–π –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π —Å–ª—É–∂–±—ã"
            )
            
            await interaction.response.send_message(
                f"‚úÖ {member.mention} –ø—Ä–∏–Ω—è—Ç –ø–æ –∫–æ–Ω—Ç—Ä–∞–∫—Ç—É –∫–∞–∫ {full_name}!",
                ephemeral=True
            )
            
        elif action == "fired":
            if not reason:
                await interaction.response.send_message("‚ùå –£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É —É–≤–æ–ª—å–Ω–µ–Ω–∏—è!", ephemeral=True)
                return
            
            roles_to_remove = [role for role in member.roles if role.name != "@everyone"]
            if roles_to_remove:
                await member.remove_roles(*roles_to_remove)
            
            data = HRSystem.get_personnel(member)
            current_name = data["name"] if data else member.display_name
            
            try:
                await member.edit(nick=f"–£–≤–æ–ª–µ–Ω | {current_name}")
            except discord.Forbidden:
                pass
            
            
            await HRSystem.log_action(
                action="–£–≤–æ–ª—å–Ω–µ–Ω–∏–µ",
                target=member,
                executor=executor,
                old_division=data.get("division", "–ù–µ —É–∫–∞–∑–∞–Ω–æ") if data else "–ù–µ —É–∫–∞–∑–∞–Ω–æ",  # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ
                reason=reason
            )

            HRSystem.remove_personnel(member)
            
            await interaction.response.send_message(
                f"‚úÖ {member.mention} —É–≤–æ–ª–µ–Ω!",
                ephemeral=True
            )
    
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")
        await interaction.response.send_message(
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã!",
            ephemeral=True
        )

@bot.tree.command(name="–ª–∏—á–Ω–æ–µ_–¥–µ–ª–æ", description="–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–∏—á–Ω–æ–µ –¥–µ–ª–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞")
@app_commands.describe(—Å–æ—Ç—Ä—É–¥–Ω–∏–∫="–£—á–∞—Å—Ç–Ω–∏–∫ —Å–µ—Ä–≤–µ—Ä–∞")
async def personnel_file(interaction: discord.Interaction, —Å–æ—Ç—Ä—É–¥–Ω–∏–∫: discord.Member):
    if not has_hr_permissions(interaction.user):
        await interaction.response.send_message("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!", ephemeral=True)
        return
    
    data = HRSystem.get_personnel(—Å–æ—Ç—Ä—É–¥–Ω–∏–∫)
    if not data:
        await interaction.response.send_message("‚ùå –°–æ—Ç—Ä—É–¥–Ω–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ!", ephemeral=True)
        return
    
    embed = discord.Embed(
        title=f"üìÇ –õ–∏—á–Ω–æ–µ –¥–µ–ª–æ: {data['name']}",
        color=discord.Color.blue()
    )
    
    embed.add_field(name="–ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ", value=data["division"], inline=True)
    embed.add_field(name="–ó–≤–∞–Ω–∏–µ", value=data["rank"], inline=True)
    embed.add_field(name="–î–æ–ª–∂–Ω–æ—Å—Ç—å", value=data["position"] or "–ù–µ —É–∫–∞–∑–∞–Ω–∞", inline=True)
    embed.add_field(name="–°—Ç–∞—Ç–∏–∫", value=data["static"] or "–ù–µ —É–∫–∞–∑–∞–Ω", inline=True)
    embed.add_field(name="–ü—Ä–∏–Ω—è—Ç", value=data["join_date"], inline=True)
    embed.add_field(name="–ü—Ä–∏–Ω—è–≤—à–∏–π", value=data["recruiter"], inline=True)
    
    await interaction.response.send_message(embed=embed)

@bot.tree.command(name="—Å–æ—Å—Ç–∞–≤", description="–ü—Ä–æ—Å–º–æ—Ç—Ä —Å–æ—Å—Ç–∞–≤–∞ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è")
@app_commands.describe(–ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ="–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ")
@app_commands.choices(–ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ=[
    app_commands.Choice(name="–í—Å–µ", value="all"),
    *[app_commands.Choice(name=d, value=d) for d in DIVISIONS]
])
async def personnel_list(interaction: discord.Interaction, –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ: app_commands.Choice[str]):
    if not has_hr_permissions(interaction.user):
        await interaction.response.send_message("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!", ephemeral=True)
        return
    
    division = –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ.value if –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ.value != "all" else None
    personnel = HRSystem.get_all_personnel(division)
    
    if not personnel:
        await interaction.response.send_message("‚ùå –í –±–∞–∑–µ –Ω–µ—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤!", ephemeral=True)
        return
    
    embed = discord.Embed(
        title=f"üìã –°–æ—Å—Ç–∞–≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è: {–ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ.name if division else '–í—Å–µ'}",
        color=discord.Color.green()
    )
    
    for user_id, data in personnel.items():
        member = interaction.guild.get_member(int(user_id))
        mention = member.mention if member else "‚ùå –£—á–∞—Å—Ç–Ω–∏–∫ –Ω–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"
        embed.add_field(
            name=f"{data['name']} ({data['division']})",
            value=f"{mention} | {data['rank']} | {data['position'] or '–ë–µ–∑ –¥–æ–ª–∂–Ω–æ—Å—Ç–∏'}",
            inline=False
        )
    
    await interaction.response.send_message(embed=embed)

@bot.tree.command(name="—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å_—Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞", description="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞")
@app_commands.describe(—Å–æ—Ç—Ä—É–¥–Ω–∏–∫="–£—á–∞—Å—Ç–Ω–∏–∫ —Å–µ—Ä–≤–µ—Ä–∞")
async def edit_personnel(interaction: discord.Interaction, —Å–æ—Ç—Ä—É–¥–Ω–∏–∫: discord.Member):
    if not has_hr_permissions(interaction.user):
        await interaction.response.send_message("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!", ephemeral=True)
        return
    
    await interaction.response.send_modal(EditPersonnelModal(—Å–æ—Ç—Ä—É–¥–Ω–∏–∫))

@bot.tree.command(name="setup", description="–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º—ã –∑–∞—è–≤–æ–∫")
async def setup(interaction: discord.Interaction):
    if not is_bot_admin(interaction.user):
        await interaction.response.send_message("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!", ephemeral=True)
        return
    
    dismissal_embed = discord.Embed(
        title="–†–∞–ø–æ—Ä—Ç—ã –Ω–∞ —É–≤–æ–ª—å–Ω–µ–Ω–∏–µ",
        description="–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–∞–ø–æ—Ä—Ç –Ω–∞ —É–≤–æ–ª—å–Ω–µ–Ω–∏–µ.",
        color=discord.Color.blue()
    )
    dismissal_embed.add_field(
        name="–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è",
        value="1. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –æ—Ç–∫—Ä—ã–≤—à—É—é—Å—è —Ñ–æ—Ä–º—É\n2. –ù–∞–∂–º–∏—Ç–µ '–û—Ç–ø—Ä–∞–≤–∏—Ç—å'\n3. –í–∞—à —Ä–∞–ø–æ—Ä—Ç –±—É–¥–µ—Ç —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å—Å—è –≤ —Ç–µ—á–µ–Ω–∏–∏ __24 —á–∞—Å–æ–≤__.",
        inline=False
    )
    
    async def dismissal_callback(interaction: discord.Interaction):
        await interaction.response.send_modal(DismissalForm())
    
    dismissal_button.callback = dismissal_callback
    dismissal_view = View()
    dismissal_view.add_item(dismissal_button)
    
    recruitment_embed = discord.Embed(
        title="üéñÔ∏è –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–æ–ª–µ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ",
        description="–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö —Ä–æ–ª–µ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –≤—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –≤–∞—Ä–∏–∞–Ω—Ç –Ω–∏–∂–µ.\n"
        "**üìã –í–∞–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:**\n"
        "> ‚Ä¢ –û–¥–Ω–∞ –∑–∞—è–≤–∫–∞ - –ø–æ–¥–∞–≤–∞–π—Ç–µ —Ç–æ–ª—å–∫–æ –æ–¥–Ω—É –∑–∞—è–≤–∫—É –∑–∞ —Ä–∞–∑\n"
        "> ‚Ä¢ –î–æ—Å—Ç–æ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ - —É–∫–∞–∑—ã–≤–∞–π—Ç–µ —Ç–æ–ª—å–∫–æ –ø—Ä–∞–≤–¥–∏–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é\n"
        "> ‚Ä¢ –î–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ - –ø—Ä–∏–ª–æ–∂–∏—Ç–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é—â–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã (–µ—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è)\n"
        "> ‚Ä¢ –¢–µ—Ä–ø–µ–Ω–∏–µ - –¥–æ–∂–¥–∏—Ç–µ—Å—å —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—è (—É –Ω–∞—Å –µ—Å—Ç—å 24 —á–∞—Å–∞)\n"
        " \n"
        "## ‚è∞ –í—Ä–µ–º—è —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—è: –æ–±—ã—á–Ω–æ –¥–æ 24 —á–∞—Å–æ–≤\n",
        color=discord.Color.green()
    )
    recruitment_embed.add_field(
        name="ü™ñ –ü—Ä–∏–∑—ã–≤ / –≠–∫—Å–∫—É—Ä—Å–∏—è",
        value="> ‚Ä¢ –ü—Ä–æ—Ö–æ–¥–∏—Ç–µ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ\n",
        inline=True
    )
    recruitment_embed.set_footer(text="–ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–∫–∏")
    recruitment_button = Button(label="–°–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ", style=discord.ButtonStyle.green, emoji="üìú")
    
    async def recruitment_callback(interaction: discord.Interaction):
        await interaction.response.send_modal(RecruitmentForm())
    
    recruitment_button.callback = recruitment_callback
    recruitment_view = View()
    recruitment_view.add_item(recruitment_button)
    
    channel = interaction.channel
    await channel.send(embed=dismissal_embed, view=dismissal_view)
    await channel.send(embed=recruitment_embed, view=recruitment_view)
    
    await interaction.response.send_message("‚úÖ –°–∏—Å—Ç–µ–º–∞ –∑–∞—è–≤–æ–∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞!", ephemeral=True)

@bot.tree.command(name="–ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å", description="–ì–æ—Ä—è—á–∞—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –±–æ—Ç–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)")
async def reload_bot(interaction: discord.Interaction):
    if not is_bot_admin(interaction.user):
        await interaction.response.send_message("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!", ephemeral=True)
        return
    
    await interaction.response.send_message("üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞—é –±–æ—Ç–∞...", ephemeral=True)
    
    # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥—É–ª–µ–π
    modules_to_reload = []
    for module_name in list(sys.modules.keys()):
        if module_name.startswith('discord'):
            modules_to_reload.append(module_name)
    
    for module_name in modules_to_reload:
        try:
            importlib.reload(sys.modules[module_name])
        except:
            pass
    
    # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –∫–æ–º–∞–Ω–¥
    try:
        await bot.tree.sync()
        await interaction.followup.send("‚úÖ –ö–æ–º–∞–Ω–¥—ã —É—Å–ø–µ—à–Ω–æ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã!", ephemeral=True)
    except Exception as e:
        await interaction.followup.send(f"‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∫–æ–º–∞–Ω–¥: {e}", ephemeral=True)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
@bot.event
async def on_interaction(interaction: discord.Interaction):
    try:
        if interaction.type == discord.InteractionType.component:
            custom_id = interaction.data.get('custom_id', '')
            
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ —Å–∫–ª–∞–¥–∞
            if custom_id.startswith("wh_"):
                # ... —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–¥ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–∫–ª–∞–¥–∞ ...
                pass
            
            elif custom_id == "dismissal_main_button":
                data = HRSystem.get_personnel(interaction.user)
                if not data:
                    await interaction.response.send_message(
                        "‚ùå –í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–º –§–°–ò–ù!", 
                        ephemeral=True
                    )
                    return

                await interaction.response.send_modal(DismissalForm())
                return
                
            elif custom_id == "recruitment_main_button":
                await interaction.response.send_modal(RecruitmentForm())
                return
                
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫
            elif custom_id == "recruitment_approve":
                await handle_recruitment_approve(interaction)
                return
            
            elif custom_id == "recruitment_reject":
                await handle_recruitment_reject(interaction)
                return
            
            elif custom_id == "dismissal_approve":
                await handle_dismissal_approve(interaction)
                return
            
            elif custom_id == "dismissal_reject":
                await handle_dismissal_reject(interaction)
                return
            
            elif custom_id == "dismissal_delete":
                await handle_dismissal_delete(interaction)
                return
            
            elif custom_id == "confirm_delete":
                try:
                    if not interaction.message.embeds:
                        return
                    
                    embed = interaction.message.embeds[0]
                    if not embed.description:
                        return
                    
                    description = embed.description
                    user_mention = re.search(r'<@(\d+)>', description)
                    
                    if user_mention:
                        user_id = int(user_mention.group(1))
                        await handle_confirm_delete(interaction, user_id)
                    
                except Exception as e:
                    print(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ confirm_delete: {e}")
                return
            
            elif custom_id == "cancel_delete":
                try:
                    await interaction.message.delete()
                except:
                    pass
                return
            
            elif custom_id == "moderator_register_button":
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–º
                personnel_data = HRSystem.get_personnel(interaction.user)
                if not personnel_data:
                    await interaction.response.send_message(
                        "‚ùå –í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–º –§–°–ò–ù!",
                        ephemeral=True
                    )
                    return
                
                await interaction.response.send_modal(ModeratorRegistrationForm())
            
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –Ω–∞—Å—Ç—Ä–æ–µ–∫
            elif custom_id == "settings_channels":
                if not is_bot_admin(interaction.user):
                    return
                
                embed = discord.Embed(
                    title="üìù –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–∞–Ω–∞–ª–æ–≤",
                    description="–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞–Ω–∞–ª –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:",
                    color=0x2E73F0
                )
                
                settings = load_settings()
                channels = settings["channels"]
                
                embed.add_field(
                    name="üìã –ö–∞–Ω–∞–ª –∑–∞—è–≤–æ–∫",
                    value=f"<#{channels['recruitment_requests']}>" if channels['recruitment_requests'] else "–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω",
                    inline=True
                )
                embed.add_field(
                    name="üö™ –ö–∞–Ω–∞–ª —Ä–∞–ø–æ—Ä—Ç–æ–≤",
                    value=f"<#{channels['dismissal_requests']}>" if channels['dismissal_requests'] else "–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω",
                    inline=True
                )
                embed.add_field(
                    name="üìä –ö–∞–Ω–∞–ª –ª–æ–≥–æ–≤",
                    value=f"<#{channels['logs']}>" if channels['logs'] else "–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω",
                    inline=True
                )
                embed.add_field(
                    name="üîÑ –ö–∞–Ω–∞–ª —Å—Ç–∞—Ç—É—Å–æ–≤",
                    value=f"<#{channels['status']}>" if channels['status'] else "–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω",
                    inline=True
                )
                
                view = ChannelSettingsView()
                if interaction.response.is_done():
                    await interaction.followup.send(embed=embed, view=view, ephemeral=True)
                else:
                    await interaction.response.send_message(embed=embed, view=view, ephemeral=True)
                return
            
            elif custom_id == "settings_google":
                if not is_bot_admin(interaction.user):
                    return
                
                settings = load_settings()
                google_settings = settings["google_sheets"]
                
                embed = discord.Embed(
                    title="üìä –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Google Sheets",
                    description="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π —Å Google –¢–∞–±–ª–∏—Ü–∞–º–∏:",
                    color=0x2E73F0
                )
                
                status = "‚úÖ –í–∫–ª—é—á–µ–Ω–æ" if google_settings.get("enabled", False) else "‚ùå –í—ã–∫–ª—é—á–µ–Ω–æ"
                spreadsheet_id = google_settings.get("spreadsheet_id", "–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ")
                worksheet_name = google_settings.get("worksheet_name", "–ö–∞–¥—Ä–æ–≤—ã–π –∞—É–¥–∏—Ç")
                
                embed.add_field(name="–°—Ç–∞—Ç—É—Å", value=status, inline=True)
                embed.add_field(name="ID —Ç–∞–±–ª–∏—Ü—ã", value=spreadsheet_id, inline=True)
                embed.add_field(name="–ò–º—è –ª–∏—Å—Ç–∞", value=worksheet_name, inline=True)
                
                view = GoogleSettingsView()
                if interaction.response.is_done():
                    await interaction.followup.send(embed=embed, view=view, ephemeral=True)
                else:
                    await interaction.response.send_message(embed=embed, view=view, ephemeral=True)
                return
            
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Google Sheets
            elif custom_id.startswith("google_"):
                if not is_bot_admin(interaction.user):
                    return
                
                action = custom_id.split("_")[1]
                settings = load_settings()
                
                if action == "toggle":
                    settings["google_sheets"]["enabled"] = not settings["google_sheets"].get("enabled", False)
                    save_settings(settings)
                    
                    status = "–≤–∫–ª—é—á–µ–Ω–∞" if settings["google_sheets"]["enabled"] else "–≤—ã–∫–ª—é—á–µ–Ω–∞"
                    await interaction.response.send_message(
                        f"‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Google Sheets {status}!",
                        ephemeral=True
                    )
                    
                elif action == "setup":
                    await interaction.response.send_message(
                        "üìù –í–≤–µ–¥–∏—Ç–µ ID Google –¢–∞–±–ª–∏—Ü—ã (–∏–∑ URL):",
                        ephemeral=True
                    )
                    
                    def check(m):
                        return m.author == interaction.user and m.channel == interaction.channel
                    
                    try:
                        msg = await bot.wait_for('message', check=check, timeout=60.0)
                        spreadsheet_id = msg.content.strip()
                        
                        settings["google_sheets"]["spreadsheet_id"] = spreadsheet_id
                        save_settings(settings)
                        
                        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ç–∞–±–ª–∏—Ü—É
                        if google_sheets.initialize():
                            success = google_sheets.setup_spreadsheet(spreadsheet_id)
                            if success:
                                await interaction.followup.send(
                                    "‚úÖ Google –¢–∞–±–ª–∏—Ü–∞ —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞!",
                                    ephemeral=True
                                )
                            else:
                                await interaction.followup.send(
                                    "‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–∞–±–ª–∏—Ü—ã! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ ID –∏ –¥–æ—Å—Ç—É–ø—ã.",
                                    ephemeral=True
                                )
                        else:
                            await interaction.followup.send(
                                "‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Google Sheets! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.",
                                ephemeral=True
                            )
                            
                    except TimeoutError:
                        await interaction.followup.send("‚ùå –í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∏—Å—Ç–µ–∫–ª–æ!", ephemeral=True)
                
                elif action == "test":
                    if google_sheets.initialize() and google_sheets.sheet:
                        test_data = {
                            "timestamp": datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S"),
                            "action": "–¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–ø–∏—Å—å",
                            "target_name": "Test User",
                            "target_id": "123456789",
                            "executor_name": interaction.user.display_name,
                            "executor_id": interaction.user.id,
                            "division": "–¢–µ—Å—Ç",
                            "rank": "–¢–µ—Å—Ç–æ–≤–æ–µ –∑–≤–∞–Ω–∏–µ",
                            "position": "–¢–µ—Å—Ç–æ–≤–∞—è –¥–æ–ª–∂–Ω–æ—Å—Ç—å",
                            "static": "XXX-XXX",
                            "reason": "–¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏"
                        }
                        
                        success = google_sheets.log_to_sheet(test_data)
                        if success:
                            await interaction.response.send_message(
                                "‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ Google Sheets!",
                                ephemeral=True
                            )
                        else:
                            await interaction.response.send_message(
                                "‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –≤ Google Sheets!",
                                ephemeral=True
                            )
                    else:
                        await interaction.response.send_message(
                            "‚ùå Google Sheets –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –∏–ª–∏ –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∞!",
                            ephemeral=True
                        )
            
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–Ω–∞–ª–æ–≤ (–¥–æ–±–∞–≤–ª–µ–Ω—ã –æ—Ç–¥–µ–ª—å–Ω—ã–µ –∫–∞–Ω–∞–ª—ã –¥–ª—è –∑–∞—è–≤–æ–∫ –∏ —Ä–∞–ø–æ—Ä—Ç–æ–≤)
            elif custom_id.startswith("channel_"):
                if not is_bot_admin(interaction.user):
                    return
                
                channel_type = custom_id.split("_")[1]
                channel_names = {
                    "recruitment": "–∫–∞–Ω–∞–ª –∑–∞—è–≤–æ–∫",
                    "dismissal": "–∫–∞–Ω–∞–ª —Ä–∞–ø–æ—Ä—Ç–æ–≤",
                    "logs": "–∫–∞–Ω–∞–ª –ª–æ–≥–æ–≤",
                    "status": "–∫–∞–Ω–∞–ª —Å—Ç–∞—Ç—É—Å–æ–≤"
                }
                
                if interaction.response.is_done():
                    await interaction.followup.send(
                        f"üìù –£–∫–∞–∂–∏—Ç–µ ID –∫–∞–Ω–∞–ª–∞ –¥–ª—è {channel_names[channel_type]} –∏–ª–∏ —É–ø–æ–º—è–Ω–∏—Ç–µ –∫–∞–Ω–∞–ª:",
                        ephemeral=True
                    )
                else:
                    await interaction.response.send_message(
                        f"üìù –£–∫–∞–∂–∏—Ç–µ ID –∫–∞–Ω–∞–ª–∞ –¥–ª—è {channel_names[channel_type]} –∏–ª–∏ —É–ø–æ–º—è–Ω–∏—Ç–µ –∫–∞–Ω–∞–ª:",
                        ephemeral=True
                    )
                
                def check(m):
                    return m.author == interaction.user and m.channel == interaction.channel
                
                try:
                    msg = await bot.wait_for('message', check=check, timeout=60.0)
                    
                    channel_id = None
                    if msg.channel_mentions:
                        channel_id = msg.channel_mentions[0].id
                    else:
                        try:
                            channel_id = int(msg.content.strip().replace('<#', '').replace('>', ''))
                        except ValueError:
                            if interaction.response.is_done():
                                await interaction.followup.send("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç ID –∫–∞–Ω–∞–ª–∞!", ephemeral=True)
                            else:
                                await interaction.response.send_message("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç ID –∫–∞–Ω–∞–ª–∞!", ephemeral=True)
                            return
                    
                    settings = load_settings()
                    settings["channels"][channel_type + "_requests" if channel_type in ["recruitment", "dismissal"] else channel_type] = channel_id
                    save_settings(settings)
                    
                    if interaction.response.is_done():
                        await interaction.followup.send(
                            f"‚úÖ {channel_names[channel_type].capitalize()} —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ <#{channel_id}>!",
                            ephemeral=True
                        )
                    else:
                        await interaction.response.send_message(
                            f"‚úÖ {channel_names[channel_type].capitalize()} —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ <#{channel_id}>!",
                            ephemeral=True
                        )
                    
                except TimeoutError:
                    if interaction.response.is_done():
                        await interaction.followup.send("‚ùå –í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∏—Å—Ç–µ–∫–ª–æ!", ephemeral=True)
                    else:
                        await interaction.response.send_message("‚ùå –í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∏—Å—Ç–µ–∫–ª–æ!", ephemeral=True)
                return
            
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∞–º–∏
            elif custom_id.startswith("admin_"):
                if not is_bot_admin(interaction.user):
                    await interaction.response.send_message("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —ç—Ç–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏!", ephemeral=True)
                    return
                
                action = custom_id.split("_")[1]
                settings = load_settings()
                
                if action == "add":
                    await interaction.response.send_message(
                        "üë§ –£–∫–∞–∂–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –∏–ª–∏ —É–ø–æ–º—è–Ω–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:",
                        ephemeral=True
                    )
                    
                    def check(m):
                        return m.author == interaction.user and m.channel == interaction.channel
                    
                    try:
                        msg = await bot.wait_for('message', check=check, timeout=60.0)
                        
                        user_id = None
                        # –ü–æ–ø—ã—Ç–∫–∞ –∏–∑–≤–ª–µ—á—å ID –∏–∑ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è
                        if msg.mentions:
                            user_id = msg.mentions[0].id
                        else:
                            # –ü–æ–ø—ã—Ç–∫–∞ –∏–∑–≤–ª–µ—á—å —á–∏—Å–ª–æ–≤–æ–π ID
                            try:
                                user_id = int(msg.content.strip().replace('<@', '').replace('>', ''))
                            except ValueError:
                                await interaction.followup.send("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!", ephemeral=True)
                                return
                        
                        if user_id in settings["admins"]:
                            await interaction.followup.send("‚ùå –≠—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º!", ephemeral=True)
                            return
                        
                        settings["admins"].append(user_id)
                        save_settings(settings)
                        
                        await interaction.followup.send(
                            f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <@{user_id}> —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã!",
                            ephemeral=True
                        )
                        
                    except TimeoutError:
                        await interaction.followup.send("‚ùå –í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∏—Å—Ç–µ–∫–ª–æ!", ephemeral=True)
                
                elif action == "remove":
                    if not settings["admins"]:
                        await interaction.response.send_message("‚ùå –ù–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è!", ephemeral=True)
                        return
                    
                    admin_list = "\n".join([f"{i+1}. <@{admin_id}>" for i, admin_id in enumerate(settings["admins"])])
                    
                    embed = discord.Embed(
                        title="üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞",
                        description="–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–º–µ—Ä –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:",
                        color=discord.Color.blue()
                    )
                    embed.add_field(name="–¢–µ–∫—É—â–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã:", value=admin_list, inline=False)
                    
                    await interaction.response.send_message(embed=embed, ephemeral=True)
                    
                    def check(m):
                        return m.author == interaction.user and m.channel == interaction.channel
                    
                    try:
                        msg = await bot.wait_for('message', check=check, timeout=60.0)
                        
                        try:
                            index = int(msg.content.strip()) - 1
                            if index < 0 or index >= len(settings["admins"]):
                                await interaction.followup.send("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!", ephemeral=True)
                                return
                            
                            removed_admin = settings["admins"].pop(index)
                            save_settings(settings)
                            
                            await interaction.followup.send(
                                f"‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä <@{removed_admin}> —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω!",
                                ephemeral=True
                            )
                            
                        except ValueError:
                            await interaction.followup.send("‚ùå –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!", ephemeral=True)
                            
                    except TimeoutError:
                        await interaction.followup.send("‚ùå –í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∏—Å—Ç–µ–∫–ª–æ!", ephemeral=True)
                
                elif action == "list":
                    admins = settings["admins"]
                    admin_list = "\n".join([f"<@{admin_id}>" for admin_id in admins]) if admins else "–ù–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤"
                    
                    embed = discord.Embed(
                        title="üìã –°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤",
                        description=admin_list,
                        color=discord.Color.blue()
                    )
                    
                    await interaction.response.send_message(embed=embed, ephemeral=True)
            
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º–∏
            elif custom_id.startswith("mod_"):
                if not is_bot_admin(interaction.user):
                    await interaction.response.send_message("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —ç—Ç–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏!", ephemeral=True)
                    return
                
                action = custom_id.split("_")[1]
                settings = load_settings()
                
                if action == "add":
                    await interaction.response.send_message(
                        "üë§ –£–∫–∞–∂–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã –∏–ª–∏ —É–ø–æ–º—è–Ω–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:",
                        ephemeral=True
                    )
                    
                    def check(m):
                        return m.author == interaction.user and m.channel == interaction.channel
                    
                    try:
                        msg = await bot.wait_for('message', check=check, timeout=60.0)
                        
                        user_id = None
                        # –ü–æ–ø—ã—Ç–∫–∞ –∏–∑–≤–ª–µ—á—å ID –∏–∑ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è
                        if msg.mentions:
                            user_id = msg.mentions[0].id
                        else:
                            # –ü–æ–ø—ã—Ç–∫–∞ –∏–∑–≤–ª–µ—á—å —á–∏—Å–ª–æ–≤–æ–π ID
                            try:
                                user_id = int(msg.content.strip().replace('<@', '').replace('>', ''))
                            except ValueError:
                                await interaction.followup.send("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!", ephemeral=True)
                                return
                        
                        if user_id in settings["moderators"]:
                            await interaction.followup.send("‚ùå –≠—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —è–≤–ª—è–µ—Ç—Å—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º!", ephemeral=True)
                            return
                        
                        settings["moderators"].append(user_id)
                        save_settings(settings)
                        
                        await interaction.followup.send(
                            f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <@{user_id}> —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã!",
                            ephemeral=True
                        )
                        
                    except TimeoutError:
                        await interaction.followup.send("‚ùå –í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∏—Å—Ç–µ–∫–ª–æ!", ephemeral=True)
                
                elif action == "remove":
                    if not settings["moderators"]:
                        await interaction.response.send_message("‚ùå –ù–µ—Ç –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è!", ephemeral=True)
                        return
                    
                    mod_list = "\n".join([f"{i+1}. <@{mod_id}>" for i, mod_id in enumerate(settings["moderators"])])
                    
                    embed = discord.Embed(
                        title="üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞",
                        description="–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–º–µ—Ä –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:",
                        color=discord.Color.blue()
                    )
                    embed.add_field(name="–¢–µ–∫—É—â–∏–µ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã:", value=mod_list, inline=False)
                    
                    await interaction.response.send_message(embed=embed, ephemeral=True)
                    
                    def check(m):
                        return m.author == interaction.user and m.channel == interaction.channel
                    
                    try:
                        msg = await bot.wait_for('message', check=check, timeout=60.0)
                        
                        try:
                            index = int(msg.content.strip()) - 1
                            if index < 0 or index >= len(settings["moderators"]):
                                await interaction.followup.send("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞!", ephemeral=True)
                                return
                            
                            removed_mod = settings["moderators"].pop(index)
                            save_settings(settings)
                            
                            await interaction.followup.send(
                                f"‚úÖ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä <@{removed_mod}> —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω!",
                                ephemeral=True
                            )
                            
                        except ValueError:
                            await interaction.followup.send("‚ùå –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞!", ephemeral=True)
                            
                    except TimeoutError:
                        await interaction.followup.send("‚ùå –í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∏—Å—Ç–µ–∫–ª–æ!", ephemeral=True)
                
                elif action == "list":
                    moderators = settings["moderators"]
                    mod_list = "\n".join([f"<@{mod_id}>" for mod_id in moderators]) if moderators else "–ù–µ—Ç –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤"
                    
                    embed = discord.Embed(
                        title="üìã –°–ø–∏—Å–æ–∫ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤",
                        description=mod_list,
                        color=discord.Color.blue()
                    )
                    
                    await interaction.response.send_message(embed=embed, ephemeral=True)
    
    except Exception as e:
        print(f"–û–±—â–∞—è –æ—à–∏–±–∫–∞ –≤ on_interaction: {e}")
        print(traceback.format_exc())

        
async def grant_moderator_access(email: str, user_id: int):
    """–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –¥–æ—Å—Ç—É–ø –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—É –∫ Google —Ç–∞–±–ª–∏—Ü–µ"""
    try:
        settings = load_settings()
        if not settings["google_sheets"].get("enabled", False):
            return False
        
        # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ç–∞–±–ª–∏—Ü—É
        spreadsheet = google_sheets.client.open_by_key(
            settings["google_sheets"]["spreadsheet_id"]
        )
        
        # –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –¥–æ—Å—Ç—É–ø
        spreadsheet.share(email, perm_type='user', role='writer')
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –ª–∏—Å—Ç–µ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤
        try:
            mod_sheet = spreadsheet.worksheet("–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã")
            cells = mod_sheet.findall(str(user_id))
            for cell in cells:
                mod_sheet.update_cell(cell.row, 6, "–î–æ—Å—Ç—É–ø –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω")  # –°—Ç–∞—Ç—É—Å
        except:
            pass
        
        return True
        
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞: {e}")
        return False

@bot.tree.command(name="—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ_–º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º–∏", description="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–æ–º –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤")
@app_commands.describe(–¥–µ–π—Å—Ç–≤–∏–µ="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ", –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å Discord")
@app_commands.choices(–¥–µ–π—Å—Ç–≤–∏–µ=[
    app_commands.Choice(name="–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –¥–æ—Å—Ç—É–ø", value="grant"),
    app_commands.Choice(name="–û—Ç–æ–∑–≤–∞—Ç—å –¥–æ—Å—Ç—É–ø", value="revoke"),
    app_commands.Choice(name="–°–ø–∏—Å–æ–∫ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤", value="list")
])
async def manage_moderators(interaction: discord.Interaction, –¥–µ–π—Å—Ç–≤–∏–µ: app_commands.Choice[str], –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: discord.User = None):
    if not is_bot_admin(interaction.user):
        await interaction.response.send_message("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!", ephemeral=True)
        return
    
    if –¥–µ–π—Å—Ç–≤–∏–µ.value == "grant" and –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:
        # –ü–æ–∏—Å–∫ –∑–∞—è–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        settings = load_settings()
        try:
            mod_sheet = google_sheets.client.open_by_key(
                settings["google_sheets"]["spreadsheet_id"]
            ).worksheet("–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã")
            
            cell = mod_sheet.find(str(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.id))
            if cell:
                email = mod_sheet.cell(cell.row, 5).value  # –°—Ç–æ–ª–±–µ—Ü —Å –ø–æ—á—Ç–æ–π
                if await grant_moderator_access(email, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.id):
                    await interaction.response.send_message(
                        f"‚úÖ –î–æ—Å—Ç—É–ø –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.mention}",
                        ephemeral=True
                    )
                else:
                    await interaction.response.send_message(
                        "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞!",
                        ephemeral=True
                    )
            else:
                await interaction.response.send_message(
                    "‚ùå –ó–∞—è–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!",
                    ephemeral=True
                )
                
        except Exception as e:
            await interaction.response.send_message(
                f"‚ùå –û—à–∏–±–∫–∞: {e}",
                ephemeral=True
            ) 
       
def migrate_old_settings():
    """–ú–∏–≥—Ä–∞—Ü–∏—è —Å—Ç–∞—Ä—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ –≤ –Ω–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç"""
    if not os.path.exists(SETTINGS_FILE):
        return
    
    try:
        with open(SETTINGS_FILE, "r", encoding="utf-8") as f:
            settings = json.load(f)
        
        changed = False
        
        # –î–æ–±–∞–≤–ª—è–µ–º google_sheets –µ—Å–ª–∏ –Ω–µ—Ç
        if "google_sheets" not in settings:
            settings["google_sheets"] = {
                "spreadsheet_id": None,
                "worksheet_name": "–ö–∞–¥—Ä–æ–≤—ã–π –∞—É–¥–∏—Ç",
                "enabled": False
            }
            changed = True
        
        # –ú–∏–≥—Ä–∞—Ü–∏—è –∫–∞–Ω–∞–ª–æ–≤
        if "channels" in settings:
            if "requests" in settings["channels"]:
                old_channel = settings["channels"]["requests"]
                if "recruitment_requests" not in settings["channels"]:
                    settings["channels"]["recruitment_requests"] = old_channel
                if "dismissal_requests" not in settings["channels"]:
                    settings["channels"]["dismissal_requests"] = old_channel
                # –ú–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å —Å—Ç–∞—Ä—ã–π –∫–ª—é—á –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
                # del settings["channels"]["requests"]
                # changed = True
        
        if changed:
            save_settings(settings)
            print("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É—Å–ø–µ—à–Ω–æ –º–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ –Ω–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫: {e}")



# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è persistent views
@bot.event
async def on_ready():
    print(f'–ë–æ—Ç {bot.user.name} –≥–æ—Ç–æ–≤ –∫ —Å–ª—É–∂–±–µ!')
    await bot.change_presence(activity=discord.Game(name="–§–°–ò–ù"))
    

    # –ó–∞–ø—É—Å–∫–∞–µ–º HTTP —Å–µ—Ä–≤–µ—Ä
    # –ó–∞–ø—É—Å–∫–∞–µ–º HTTP —Å–µ—Ä–≤–µ—Ä
    bot.web_server = BotWebServer(bot, host='0.0.0.0', port=5000)
    bot.web_server.start_server()  # –£–±—Ä–∞–Ω–æ await, —Ç–∞–∫ –∫–∞–∫ —ç—Ç–æ —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –º–µ—Ç–æ–¥
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    settings = load_settings()
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Google Sheets
    if google_sheets.initialize():
        if settings.get("google_sheets", {}).get("enabled", False):
            spreadsheet_id = settings["google_sheets"].get("spreadsheet_id")
            worksheet_name = settings["google_sheets"].get("worksheet_name", "–ö–∞–¥—Ä–æ–≤—ã–π –∞—É–¥–∏—Ç")
            if spreadsheet_id:
                google_sheets.setup_spreadsheet(spreadsheet_id, worksheet_name)
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è persistent views
    bot.add_view(RecruitmentRequestView())
    bot.add_view(DismissalRequestView(0))
    bot.add_view(ConfirmDeleteView(0))
    bot.add_view(SettingsView())
    bot.add_view(ChannelSettingsView())
    bot.add_view(RoleSettingsView())
    bot.add_view(AdminManagementView())
    bot.add_view(ModeratorManagementView())
    bot.add_view(GoogleSettingsView())
    bot.add_view(DismissalButtonView())
    bot.add_view(RecruitmentButtonView())
    
    try:
        synced = await bot.tree.sync()
        print(f"–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ {len(synced)} –∫–æ–º–∞–Ω–¥")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∫–æ–º–∞–Ω–¥: {e}")

bot.run('MTQxOTY3NjAyOTI0MDM0ODgxNg.G9Zq7p.znRtvLrgpfwUJmCl06nI8zCAtO3EcTEEzWatIU')